{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///../../libs/api/data-access-db/src/index.ts","webpack:///../../libs/api/data-access-db/src/lib/api-data-access-db.module.ts","webpack:///../../libs/api/data-access-db/src/lib/prisma.service.ts","webpack:///external commonjs \"@prisma/client\"","webpack:///../../libs/api/feature-product/src/index.ts","webpack:///../../libs/api/feature-product/src/lib/api-feature-product.module.ts","webpack:///../../libs/api/feature-product/src/lib/api-feature-product.controller.ts","webpack:///../../libs/api/feature-product/src/lib/products.service.ts","webpack:///../../libs/api/feature-auth/src/index.ts","webpack:///../../libs/api/feature-auth/src/lib/api-feature-auth.module.ts","webpack:///../../libs/api/feature-auth/src/lib/auth.service.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///../../libs/api/feature-auth/src/lib/user.service.ts","webpack:///../../libs/api/feature-auth/src/lib/auth.controller.ts","webpack:///../../libs/api/feature-auth/src/lib/local-auth.guard.ts","webpack:///external commonjs \"@nestjs/passport\"","webpack:///../../libs/api/feature-auth/src/lib/dto/create-user.dto.ts","webpack:///../../libs/api/feature-auth/src/lib/jwt-auth.guard.ts","webpack:///../../libs/api/feature-auth/src/lib/local.strategy.ts","webpack:///external commonjs \"passport-local\"","webpack:///../../libs/api/feature-auth/src/lib/constants.ts","webpack:///../../libs/api/feature-auth/src/lib/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///../../libs/api/feature-product/src/lib/dto/create-product-dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///../../libs/api/feature-product/src/lib/dto/product-bool-field-update.dto.ts","webpack:///../../libs/api/feature-category/src/index.ts","webpack:///../../libs/api/feature-category/src/lib/api-feature-category.module.ts","webpack:///../../libs/api/feature-category/src/lib/category.controller.ts","webpack:///../../libs/api/feature-category/src/lib/category.service.ts","webpack:///../../libs/api/feature-category/src/lib/dto/create-category.dto.ts","webpack:///../../libs/api/feature-order/src/index.ts","webpack:///../../libs/api/feature-order/src/lib/api-feature-order.module.ts","webpack:///../../libs/api/feature-order/src/lib/api-feature-order.controller.ts","webpack:///../../libs/api/feature-order/src/lib/dto/create-order.dto.ts","webpack:///../../libs/api/feature-order/src/lib/order.service.ts","webpack:///../../libs/common/util/src/index.ts","webpack:///../../libs/common/util/src/lib/common-util.ts","webpack:///external commonjs \"luxon\"","webpack:///../../libs/common/util/src/lib/cartItems.util.ts","webpack:///../../libs/common/types/src/index.ts","webpack:///../../libs/common/types/src/lib/common-types.ts","webpack:///../../libs/common/types/src/lib/models/index.ts","webpack:///../../libs/common/types/src/lib/models/product.ts","webpack:///../../libs/common/types/src/lib/models/cart.ts","webpack:///../../libs/common/types/src/lib/models/user.ts","webpack:///../../libs/common/types/src/lib/models/organisation.ts","webpack:///../../libs/common/types/src/lib/models/taxes.ts","webpack:///../../libs/common/types/src/lib/models/order.ts","webpack:///../../libs/common/types/src/lib/models/table.ts","webpack:///../../libs/common/types/src/lib/models/countries.ts","webpack:///../../libs/common/types/src/lib/models/count.dialog.ts","webpack:///../../libs/common/types/src/lib/models/modifier.dialog.ts","webpack:///../../libs/common/types/src/lib/models/company.dialog.ts","webpack:///../../libs/common/types/src/lib/models/pos.session.ts","webpack:///../../libs/common/types/src/lib/models/printer.ts","webpack:///../../libs/common/types/src/lib/models/kitchen.ts","webpack:///../../libs/common/types/src/lib/models/kitchen.dialog.ts","webpack:///../../libs/common/types/src/lib/models/category.dialog.ts","webpack:///../../libs/common/types/src/lib/models/table.dialog.ts","webpack:///../../libs/common/types/src/lib/models/product.dialog.ts","webpack:///../../libs/common/types/src/lib/models/tax.dialog.ts","webpack:///../../libs/common/types/src/lib/models/floor.dialog.ts","webpack:///../../libs/common/types/src/lib/models/user.dialog.ts","webpack:///../../libs/common/types/src/lib/models/variant.dialog.ts","webpack:///../../libs/common/types/src/lib/models/confirm.dialog.data.ts","webpack:///../../libs/common/types/src/lib/models/cart-item-price.dialog.data.ts","webpack:///../../libs/api/feature-order/src/lib/pdf.service.ts","webpack:///external node-commonjs \"fs\"","webpack:///external commonjs \"hbs\"","webpack:///external node-commonjs \"path\"","webpack:///external commonjs \"puppeteer\"","webpack:///../../libs/api/feature-order/src/lib/print.service.ts","webpack:///external commonjs \"pdf-to-printer\"","webpack:///../../libs/api/feature-company/src/index.ts","webpack:///../../libs/api/feature-company/src/lib/api-feature-company.controller.ts","webpack:///../../libs/api/feature-company/src/lib/company.service.ts","webpack:///../../libs/api/feature-company/src/lib/dto/company.update.dto.ts","webpack:///../../libs/api/feature-company/src/lib/api-feature-company.module.ts","webpack:///../../libs/api/feature-table/src/index.ts","webpack:///../../libs/api/feature-table/src/lib/api-feature-table.module.ts","webpack:///../../libs/api/feature-table/src/lib/table.controller.ts","webpack:///../../libs/api/feature-table/src/lib/table.service.ts","webpack:///../../libs/api/feature-table/src/lib/dto/create-table.dto.ts","webpack:///../../libs/api/feature-floor/src/index.ts","webpack:///../../libs/api/feature-floor/src/lib/api-feature-floor.module.ts","webpack:///../../libs/api/feature-floor/src/lib/floor.controller.ts","webpack:///../../libs/api/feature-floor/src/lib/floor.service.ts","webpack:///../../libs/api/feature-floor/src/lib/dto/create-floor.dto.ts","webpack:///external commonjs \"@nestjs/serve-static\"","webpack:///../../libs/api/feature-pos-session/src/index.ts","webpack:///../../libs/api/feature-pos-session/src/lib/api-feature-pos-session.module.ts","webpack:///../../libs/api/feature-pos-session/src/lib/pos-session.controller.ts","webpack:///../../libs/api/feature-pos-session/src/lib/session.service.ts","webpack:///../../libs/api/feature-pos-session/src/lib/report.service.ts","webpack:///../../libs/api/common/src/index.ts","webpack:///../../libs/api/common/src/lib/api-common.module.ts","webpack:///../../libs/api/common/src/lib/puppeteer.service.ts","webpack:///../../libs/api/common/src/lib/puppeteer.util.ts","webpack:///../../libs/api/feature-stat/src/index.ts","webpack:///../../libs/api/feature-stat/src/lib/api-feature-stat.module.ts","webpack:///../../libs/api/feature-stat/src/lib/stats.controller.ts","webpack:///../../libs/api/feature-stat/src/lib/stats.service.ts","webpack:///../../libs/api/feature-kitchen/src/index.ts","webpack:///../../libs/api/feature-kitchen/src/lib/api-feature-kitchen.module.ts","webpack:///../../libs/api/feature-kitchen/src/lib/kitchen.service.ts","webpack:///../../libs/api/feature-kitchen/src/lib/kitchen.controller.ts","webpack:///../../libs/api/feature-kitchen/src/lib/dto/create-kitchen.dto.ts","webpack:///../../libs/api/feature-tax/src/index.ts","webpack:///../../libs/api/feature-tax/src/lib/api-feature-tax.module.ts","webpack:///../../libs/api/feature-tax/src/lib/tax.controller.ts","webpack:///../../libs/api/feature-tax/src/lib/tax.service.ts","webpack:///../../libs/api/feature-tax/src/lib/dto/create-tax.dto.ts","webpack:///../../libs/api/feature-user/src/index.ts","webpack:///../../libs/api/feature-user/src/lib/api-feature-user.module.ts","webpack:///../../libs/api/feature-user/src/lib/user.controller.ts","webpack:///../../libs/api/feature-user/src/lib/user.service.ts","webpack:///../../libs/api/feature-user/src/lib/dto/user-create.dto.ts","webpack:///../../libs/api/feature-variant/src/index.ts","webpack:///../../libs/api/feature-variant/src/lib/api-feature-variant.module.ts","webpack:///../../libs/api/feature-variant/src/lib/variant.service.ts","webpack:///../../libs/api/feature-variant/src/lib/variant.conroller.ts","webpack:///../../libs/api/feature-variant/src/lib/dto/create-variant.dto.ts","webpack:///../../libs/api/feature-home-delivery/src/index.ts","webpack:///../../libs/api/feature-home-delivery/src/lib/api-feature-home-delivery.module.ts","webpack:///../../libs/api/feature-home-delivery/src/lib/home-delivery.controller.ts","webpack:///../../libs/api/feature-home-delivery/src/lib/home-delivery.service.ts","webpack:///../../libs/api/feature-order-history/src/index.ts","webpack:///../../libs/api/feature-order-history/src/lib/api-feature-order-history.module.ts","webpack:///../../libs/api/feature-order-history/src/lib/order-history.controller.ts","webpack:///../../libs/api/feature-order-history/src/lib/order-history.service.ts","webpack:///../../libs/api/feature-kot/src/index.ts","webpack:///../../libs/api/feature-kot/src/lib/api-feature-kot.module.ts","webpack:///../../libs/api/feature-kot/src/lib/kot.controller.ts","webpack:///../../libs/api/feature-kot/src/lib/kot.services.ts","webpack:///external commonjs \"express\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\nimport { ApiFeatureProductModule } from '@hotel/api/feature-product';\r\nimport { ApiFeatureCategoryModule } from '@hotel/api/feature-category';\r\nimport { ApiFeatureOrderModule } from '@hotel/api/feature-order';\r\nimport { ApiFeatureCompanyModule } from '@hotel/api/feature-company';\r\nimport { ApiFeatureTableModule } from '@hotel/api/feature-table';\r\nimport { ApiFeatureFloorModule } from '@hotel/api/feature-floor';\r\nimport { ApiFeatureAuthModule } from '@hotel/api/feature-auth';\r\nimport { ServeStaticModule } from '@nestjs/serve-static';\r\nimport { join } from 'path';\r\nimport { ApiFeaturePosSessionModule } from '@hotel/api/feature-pos-session';\r\nimport { ApiFeatureStatModule } from '@hotel/api/feature-stat';\r\nimport { ApiCommonModule } from '@hotel/api/common';\r\nimport { ApiFeatureKitchenModule } from '@hotel/api/feature-kitchen';\r\nimport { ApiFeatureTaxModule } from '@hotel/api/feature-tax';\r\nimport { ApiFeatureUserModule } from '@hotel/api/feature-user';\r\nimport { ApiFeatureVariantModule } from '@hotel/api/feature-variant';\r\nimport { ApiFeatureHomeDeliveryModule } from '@hotel/api/feature-home-delivery';\r\nimport { ApiFeatureOrderHistoryModule } from '@hotel/api/feature-order-history';\r\nimport { ApiFeatureKotModule } from '@hotel/api/feature-kot';\r\nimport { FeatureLicenseModule } from 'feature-license';\r\nimport { FeatureBackupModule } from 'feature-backup';\r\n\r\n@Module({\r\n  imports: [\r\n    ApiDataAccessDbModule,\r\n    ApiFeatureAuthModule,\r\n    ApiFeatureProductModule,\r\n    ApiFeatureCategoryModule,\r\n    ApiFeatureOrderModule,\r\n    ApiFeatureCompanyModule,\r\n    ApiFeatureTableModule,\r\n    ApiFeatureFloorModule,\r\n    ApiFeaturePosSessionModule,\r\n    ApiFeatureStatModule,\r\n    ApiFeatureKitchenModule,\r\n    ApiFeatureTableModule,\r\n    ApiCommonModule,\r\n    ApiFeatureTaxModule,\r\n    ApiFeatureUserModule,\r\n    ApiFeatureVariantModule,\r\n    ApiFeatureHomeDeliveryModule,\r\n    ApiFeatureOrderHistoryModule,\r\n    ApiFeatureKotModule,\r\n    // FeatureLicenseModule,\r\n    // FeatureBackupModule,\r\n    ServeStaticModule.forRoot({\r\n      rootPath: join(__dirname, '..', 'orderapp'),\r\n      exclude: ['/api*'],\r\n    }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","module.exports = require(\"tslib\");","import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Hello API' };\r\n  }\r\n}\r\n","export * from './lib/api-data-access-db.module';\r\nexport * from './lib/prisma.service';\r\n","import { Module } from '@nestjs/common';\r\nimport { PrismaService } from './prisma.service';\r\n\r\n@Module({\r\n  controllers: [],\r\n  providers: [PrismaService],\r\n  exports: [PrismaService],\r\n})\r\nexport class ApiDataAccessDbModule {}\r\n","import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\n@Injectable()\r\nexport class PrismaService extends PrismaClient implements OnModuleInit {\r\n  async onModuleInit() {\r\n    console.log('module init jafar');\r\n    await this.$connect();\r\n    // await this['$connect']();\r\n  }\r\n\r\n  async enableShutdownHooks(app: INestApplication) {\r\n    // this.$on('beforeExit' as never, async () => {\r\n    //   await app.close();\r\n    // });\r\n    this['$on']('beforeExit' as never, async () => {\r\n      await app.close();\r\n    });\r\n  }\r\n}\r\n","module.exports = require(\"@prisma/client\");","export * from './lib/api-feature-product.module';\r\n","import {\r\n  ApiDataAccessDbModule,\r\n  PrismaService,\r\n} from '@hotel/api/data-access-db';\r\nimport { Module } from '@nestjs/common';\r\nimport { ApiFeatureProductController } from './api-feature-product.controller';\r\nimport { ProductService } from './products.service';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule],\r\n  controllers: [ApiFeatureProductController],\r\n  providers: [ProductService],\r\n  exports: [],\r\n})\r\nexport class ApiFeatureProductModule {}\r\n","// import { JwtAuthGuard } from '@jafar-tech/backend/auth';\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  FileTypeValidator,\r\n  Get,\r\n  MaxFileSizeValidator,\r\n  Param,\r\n  ParseFilePipe,\r\n  Patch,\r\n  Post,\r\n  Put,\r\n  Req,\r\n  UploadedFile,\r\n  UploadedFiles,\r\n  UseGuards,\r\n  UseInterceptors,\r\n} from '@nestjs/common';\r\n// import { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\r\n// // import { Express } from 'express';\r\n// // import * as multeri from 'multer';\r\n\r\n// import { CreateProductDto } from './dto/create-product-dto';\r\n// import { PatchProductIndexDto } from './dto/patch-porduct.dto';\r\n// import { ProductBoolFieldDto } from './dto/product-bool-field-update.dto';\r\nimport { ProductService } from './products.service';\r\nimport { JwtAuthGuard, LocalAuthGuard } from '@hotel/api/feature-auth';\r\nimport { CreateProductDto } from './dto/create-product-dto';\r\nimport { ProductBoolFieldDto } from './dto/product-bool-field-update.dto';\r\n\r\n@Controller('product')\r\nexport class ApiFeatureProductController {\r\n  constructor(private productService: ProductService) {}\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('list')\r\n  getProducts() {\r\n    console.log('get product api end point');\r\n    return this.productService.getProduct();\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post()\r\n  createProduct(@Body() params: CreateProductDto) {\r\n    return this.productService.createProduct(params);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Put(':id')\r\n  updateProduct(@Body() body: CreateProductDto, @Param('id') id: any) {\r\n    const productId = +id;\r\n    console.log('Product id', productId);\r\n    return this.productService.udpateProduct(productId, body);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Patch(':id')\r\n  updateProductAvailability(\r\n    @Body() body: ProductBoolFieldDto,\r\n    @Param('id') id: any\r\n  ) {\r\n    console.log('patch request happened now');\r\n    const productId = +id;\r\n    console.log('Product id', productId);\r\n    console.log('input data', body);\r\n    return this.productService.updateProductBoolField(productId, body);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Delete(':id')\r\n  deleteProduct(@Param('id') id: any) {\r\n    const productId = +id;\r\n    console.log(\r\n      `Delete Request to Deactivate Product of product ID ${productId}`\r\n    );\r\n    console.log('Product id', productId);\r\n    return this.productService.deactivateProduct(productId);\r\n  }\r\n  // @UseGuards(JwtAuthGuard)\r\n  // @Post()\r\n  // createProduct(@Body() product: CreateProductDto, @Req() req) {\r\n  //   console.log('create product called');\r\n  //   let companyId = req.user.companyId;\r\n  //   return this.productService.createProduct(companyId, product);\r\n  // }\r\n\r\n  // @UseGuards(JwtAuthGuard)\r\n  // @Patch(':id')\r\n  // updateProduct(\r\n  //   @Body() product: CreateProductDto,\r\n  //   @Req() req,\r\n  //   @Param('id') productId: string\r\n  // ) {\r\n  //   let companyId = req.user.companyId;\r\n  //   return this.productService.updateProduct(companyId, productId, product);\r\n  // }\r\n\r\n  // @Patch()\r\n  // updateProductOrder(@Body() data: PatchProductIndexDto[], @Req() req) {\r\n  //   // console.log(data);\r\n  //   let companyId = req.user.companyId;\r\n  //   return this.productService.updateProductsIndex(companyId, data);\r\n  // }\r\n\r\n  // @Put(':id')\r\n  // updateProductInfo(\r\n  //   @Body() data: ProductBoolFieldDto,\r\n\r\n  //   @Req() req,\r\n  //   @Param('id') productId: string\r\n  // ) {\r\n  //   let companyId = req.user.companyId;\r\n  //   return this.productService.updateProductInfo(productId, companyId, data);\r\n  // }\r\n\r\n  // @Post('upload')\r\n  // @UseInterceptors(\r\n  //   FilesInterceptor('files', 3, {\r\n  //     storage: multeri.diskStorage({\r\n  //       destination: './files',\r\n  //       filename: function (req, file, cb) {\r\n  //         const uniqueSuffix =\r\n  //           Date.now() + '-' + Math.round(Math.random() * 1e9);\r\n  //         cb(\r\n  //           null,\r\n  //           file.fieldname + '-' + uniqueSuffix + '.' + file.originalname\r\n  //         );\r\n  //       },\r\n  //     }),\r\n  //   })\r\n  // )\r\n  // uploadFile(\r\n  //   @UploadedFiles()\r\n  //   files: any\r\n  // ) {\r\n  //   let companyId = '643074dde7d1634c7e61a595';\r\n  //   let productId = '643216007ac7638842fa4c89';\r\n  //   this.productService.updateProductImage(companyId, productId, files[0]);\r\n  //   // console.log('upload route');\r\n  //   // console.log(files);\r\n  // }\r\n\r\n  // @Delete('image')\r\n  // deleteProductImage(@Param('id') image, @Req() req) {\r\n  //   // const companyId = req.user.companyId;\r\n  //   // console.log(image);\r\n  //   return 'hello bro' + image;\r\n  //   return this.productService.deleteProductImage(image);\r\n  // }\r\n}\r\n\r\n// FilesInterceptor('files', 3, {\r\n//   storage: multeri.diskStorage({\r\n\r\n//     filename: function (req, file, cb) {\r\n//       const uniqueSuffix =\r\n//         Date.now() + '-' + Math.round(Math.random() * 1e9);\r\n//       cb(\r\n//         null,\r\n//         file.fieldname +\r\n//           '-' +\r\n//           uniqueSuffix +\r\n//           '.' +\r\n//           file.originalname\r\n//       );\r\n//     },\r\n//   }),\r\n// })\r\n","import {\r\n  BadGatewayException,\r\n  BadRequestException,\r\n  Injectable,\r\n  RequestTimeoutException,\r\n} from '@nestjs/common';\r\n\r\nimport { PrismaService } from '@hotel/api/data-access-db';\r\nimport { CreateProductDto } from './dto/create-product-dto';\r\nimport { ProductBoolFieldDto } from './dto/product-bool-field-update.dto';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n  constructor(private prismaService: PrismaService) {}\r\n  private products = PRODUCTS;\r\n\r\n  async getProduct() {\r\n    return await this.prismaService.product.findMany({\r\n      where: { isArchived: false },\r\n      include: {\r\n        variants: true,\r\n        modifierGroup: {\r\n          include: {\r\n            modifiers: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: {\r\n        code: 'asc',\r\n      },\r\n    });\r\n    // let products: Product[] = await this.productRepository.getProducts();\r\n\r\n    // let categoryVice = {};\r\n\r\n    // products.map((item) => {\r\n    //   // if (categoryVice[item.category]) {\r\n    //   //   categoryVice[item.category] = [...categoryVice[item.category], item];\r\n    //   // } else {\r\n    //   //   categoryVice[item.category] = [];\r\n    //   // }\r\n\r\n    //   categoryVice[item.category] = [\r\n    //     ...(categoryVice[item.category] || []),\r\n    //     item,\r\n    //   ];\r\n    // });\r\n\r\n    // return categoryVice;\r\n  }\r\n\r\n  createProduct(data: CreateProductDto) {\r\n    return this.prismaService.product.create({\r\n      data: {\r\n        ...data,\r\n        price: +data.price,\r\n        cost: +data.cost,\r\n        code: +data.code,\r\n        collectionId: +data.collectionId,\r\n        categoryId: +data.categoryId,\r\n        qwickViewOrder: +data.qwickViewOrder,\r\n      },\r\n    });\r\n  }\r\n\r\n  async udpateProduct(id: number, data: CreateProductDto) {\r\n    try {\r\n      return this.prismaService.product.update({\r\n        where: { id },\r\n        data: {\r\n          ...data,\r\n          price: +data.price,\r\n          cost: +data.cost,\r\n          code: +data.code,\r\n          categoryId: +data.categoryId,\r\n          qwickViewOrder: +data.qwickViewOrder,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n\r\n  async updateProductBoolField(id: number, data: ProductBoolFieldDto) {\r\n    try {\r\n      const updateData: any = {};\r\n      updateData[data.fieldName] = data.value;\r\n      console.log('updated created object', updateData);\r\n      return this.prismaService.product.update({\r\n        where: { id },\r\n        data: {\r\n          ...updateData,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n\r\n  async deactivateProduct(id: number) {\r\n    try {\r\n      return this.prismaService.product.update({\r\n        where: { id },\r\n        data: {\r\n          isArchived: true,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n  // updateProductsIndex(companyId: string, data: PatchProductIndexDto[]) {\r\n  //   return this.productRepository.bulkUpdate(companyId, data);\r\n  // }\r\n\r\n  // updateProductInfo(\r\n  //   companyId: string,\r\n  //   productId: string,\r\n  //   data: ProductBoolFieldDto\r\n  // ) {\r\n  //   return this.productRepository.updateProductInfo(companyId, data);\r\n  // }\r\n\r\n  // async updateProductImage(\r\n  //   companyId: string,\r\n  //   productId: string,\r\n  //   image: File | any\r\n  // ) {\r\n  //   const imageData = await this.imageService.uploadImageToFirebaseStorage(\r\n  //     companyId,\r\n  //     productId,\r\n  //     image\r\n  //   );\r\n  //   return this.productRepository.updateProductImage(\r\n  //     companyId,\r\n  //     productId,\r\n  //     imageData\r\n  //   );\r\n  // }\r\n\r\n  // async deleteProductImage(imagePath: string) {\r\n  //   //  add a check for the company id of the user to check the permission.\r\n\r\n  //   imagePath =\r\n  //     '643074dde7d1634c7e61a595/files-1681800710560-114757958.testiamge.jpg';\r\n  //   return this.imageService.deleteImageFromFirebaseStorage(imagePath);\r\n  // }\r\n\r\n  // updateProduct(companyId: string, productId: string, data: CreateProductDto) {\r\n  //   return this.productRepository.updateProduct(companyId, productId, data);\r\n  // }\r\n}\r\n\r\nexport const PRODUCTS = [\r\n  {\r\n    id: 11,\r\n    name: 'Caffe Latte',\r\n    price: 33,\r\n    type: 'juice',\r\n    image: '',\r\n    description: 'its an amazing splend',\r\n    isActive: true,\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Mocko creepo',\r\n    price: 33,\r\n    type: 'juice',\r\n    image: '',\r\n    description: 'Juice mix ss splend',\r\n    isActive: true,\r\n  },\r\n];\r\n\r\n// async uploadImage(\r\n//   companyId: string,\r\n//   productId: string,\r\n//   image: File | any\r\n// ): Promise<string> {\r\n//   // upload.\r\n//   // clean up the folder.\r\n//   // create the download signedURl\r\n//   // store that to mongodb.\r\n\r\n//   let downloadUrlPath: '';\r\n//   try {\r\n//     const response = await admin\r\n//       .storage()\r\n//       .bucket()\r\n//       .upload(image.path, {\r\n//         destination: `${companyId}/${image.filename}`,\r\n\r\n//         // encryptionKey: '60473000-5e71-49a1-b6da-cc5346483bae',\r\n//       });\r\n\r\n//     // once uploaded delete the local file as it increases the disk memory usage.\r\n//     fs.unlink(image.path, (err) => {\r\n//       if (err) {\r\n//         console.error(err);\r\n//         return;\r\n//       }\r\n//     });\r\n//     console.log(response[1]);\r\n\r\n//     // const useBucked = await response[0].bucket.getSignedUrl({\r\n//     //   action: 'list',\r\n//     //   expires: '01-01-2030',\r\n//     // });\r\n\r\n//     const useBucked = await admin\r\n//       .storage()\r\n//       .bucket()\r\n//       .file(response[1].name)\r\n//       .getSignedUrl({\r\n//         action: 'read',\r\n//         expires: '01-01-2030',\r\n//       });\r\n\r\n//     console.log(useBucked);\r\n//   } catch (error) {\r\n//     console.log('something wrong happened while upload the image.', error);\r\n//     throw new RequestTimeoutException('Fiailed to upload to storage.');\r\n//   }\r\n\r\n//   return downloadUrlPath;\r\n\r\n//   // const storeage = admin\r\n//   //   .storage()\r\n//   //   .bucket()\r\n//   //   .file('jafy.png', { encryptionKey: image })\r\n//   //   .save(image);\r\n//   // console.log(storeage);\r\n// }\r\n// }\r\n","export * from './lib/api-feature-auth.module';\r\nexport * from './lib/local.strategy';\r\nexport * from './lib/local-auth.guard';\r\nexport * from './lib/jwt-auth.guard';\r\n","import { Module } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { AuthController } from './auth.controller';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\nimport { LocalStrategy } from './local.strategy';\r\nimport { LocalAuthGuard } from './local-auth.guard';\r\nimport { jwtConstants } from './constants';\r\n\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { JwtStrategy } from './jwt.strategy';\r\nimport { UserService } from './user.service';\r\n\r\n@Module({\r\n  imports: [\r\n    ApiDataAccessDbModule,\r\n    JwtModule.register({\r\n      secret: jwtConstants.secret,\r\n      signOptions: { expiresIn: '432000s' },\r\n    }),\r\n  ],\r\n  controllers: [AuthController],\r\n  providers: [\r\n    AuthService,\r\n    LocalStrategy,\r\n    LocalAuthGuard,\r\n    JwtStrategy,\r\n    UserService,\r\n  ],\r\n  exports: [LocalStrategy, LocalAuthGuard, JwtStrategy],\r\n})\r\nexport class ApiFeatureAuthModule {}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { User } from '@hotel/common/types';\r\n\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private userService: UserService,\r\n    private prismaService: PrismaService,\r\n    private jwtService: JwtService\r\n  ) {}\r\n  async signIn(user: User): Promise<any> {\r\n    // console.log('inside singin', user);\r\n    const payload = {\r\n      username: user.username,\r\n      name: user.name,\r\n    };\r\n    const response = {\r\n      user,\r\n      token: this.jwtService.sign(payload),\r\n    };\r\n\r\n    console.log('user signed successfully', response.user?.username);\r\n\r\n    return response;\r\n  }\r\n\r\n  async validateUser(username: string, pass: number): Promise<any> {\r\n    const user = await this.userService.findOne(username);\r\n    // console.log('before check', user);\r\n    if (user && user.password == pass) {\r\n      // console.log('inside quality chekd');\r\n      const { password, ...result } = user;\r\n      return result;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async getUserFromUserName(username: string) {\r\n    try {\r\n      const user = await this.prismaService.user.findUnique({\r\n        where: { username },\r\n      });\r\n      if (!user) {\r\n        throw new UnauthorizedException();\r\n      }\r\n      return user;\r\n    } catch (error) {\r\n      console.log('could not find a user getUserFromUserName');\r\n      throw new UnauthorizedException();\r\n    }\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/jwt\");","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateUserDto } from './dto/create-user.dto';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private prismaService: PrismaService) {}\r\n  async findOne(username: string) {\r\n    const user = await this.prismaService.user.findFirst({\r\n      where: { username },\r\n    });\r\n    // console.log('inside the findOne method. ', user);\r\n    return user;\r\n  }\r\n\r\n  async createAStaffUser(userDto: CreateUserDto) {\r\n    try {\r\n      return await this.prismaService.user.create({\r\n        data: {\r\n          username: userDto.username,\r\n          password: userDto.password,\r\n          name: userDto.name,\r\n          phone: userDto.phone,\r\n        },\r\n      });\r\n    } catch (error: any) {\r\n      console.log(error);\r\n      if (error.code == 'P2002') {\r\n        throw new BadRequestException({ message: 'Username already exists' });\r\n      }\r\n      throw new BadRequestException({ message: 'Could not create a new user' });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Post,\r\n  HttpCode,\r\n  HttpStatus,\r\n  UseGuards,\r\n  Req,\r\n} from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\nimport { SignInDto } from './dto/signin.dto';\r\nimport { LocalAuthGuard } from './local-auth.guard';\r\nimport { CreateUserDto } from './dto/create-user.dto';\r\nimport { UserService } from './user.service';\r\nimport { JwtAuthGuard } from './jwt-auth.guard';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  @UseGuards(LocalAuthGuard)\r\n  @HttpCode(HttpStatus.OK)\r\n  @Post('login')\r\n  signIn(@Req() req: any) {\r\n    console.log('has gone inside');\r\n    const user = req.user;\r\n    return this.authService.signIn(user);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post('signup')\r\n  async signUp(@Body() createUserInput: CreateUserDto) {\r\n    console.log('sinup methiod');\r\n    return this.userService.createAStaffUser(createUserInput);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class LocalAuthGuard extends AuthGuard('local') {}\r\n","module.exports = require(\"@nestjs/passport\");","export class CreateUserDto {\r\n  username!: string;\r\n  password!: number;\r\n  name!: string;\r\n  phone!: string;\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\r\n","import { Strategy } from 'passport-local';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  async validate(username: string, password: number): Promise<any> {\r\n    const user = await this.authService.validateUser(username, password);\r\n    // console.log('inside validate ', user);\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","module.exports = require(\"passport-local\");","export const jwtConstants = {\r\n  secret: 'secretKey',\r\n};\r\n","import { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { jwtConstants } from './constants';\r\nimport { User } from '@hotel/common/types';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: jwtConstants.secret,\r\n    });\r\n  }\r\n\r\n  async validate(payload: any) {\r\n    // console.log(payload);\r\n    const user = await this.authService.getUserFromUserName(payload.username);\r\n    // console.log('inside validate ', user);\r\n    if (!user) {\r\n      throw new UnauthorizedException();\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","module.exports = require(\"passport-jwt\");","import { IsNotEmpty, IsOptional, isString, IsString } from 'class-validator';\r\n\r\nexport class CreateProductDto {\r\n  @IsString()\r\n  @IsOptional()\r\n  image!: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  description!: string;\r\n\r\n  @IsOptional()\r\n  isAvailable!: boolean;\r\n\r\n  @IsOptional()\r\n  onSale!: boolean;\r\n\r\n  @IsNotEmpty()\r\n  price!: number;\r\n\r\n  @IsNotEmpty()\r\n  cost!: number;\r\n\r\n  @IsNotEmpty()\r\n  @IsString()\r\n  name!: string;\r\n\r\n  categoryId!: number;\r\n  color?: string;\r\n  collectionId!: number;\r\n  code!: number;\r\n  qwickViewOrder!: number;\r\n  @IsOptional()\r\n  archived!: boolean;\r\n\r\n  @IsOptional()\r\n  video?: string;\r\n\r\n  @IsOptional()\r\n  popular!: boolean;\r\n\r\n  @IsString()\r\n  @IsOptional()\r\n  printName?: string;\r\n}\r\n\r\nexport class Modifiers {\r\n  description?: string;\r\n  printName?: string;\r\n  printModifiersAsItems?: boolean;\r\n  modifiers?: Modifier[];\r\n}\r\n\r\nexport interface Modifier {\r\n  description: string;\r\n  price: number;\r\n  id?: number;\r\n}\r\n","module.exports = require(\"class-validator\");","export class ProductBoolFieldDto {\r\n  fieldName!: string;\r\n  value!: boolean;\r\n}\r\n","export * from './lib/api-feature-category.module';\r\n","import { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\nimport { Module } from '@nestjs/common';\r\nimport { CategoryController } from './category.controller';\r\nimport { CategoryService } from './category.service';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule],\r\n  controllers: [CategoryController],\r\n  providers: [CategoryService],\r\n  exports: [],\r\n})\r\nexport class ApiFeatureCategoryModule {}\r\n","import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { CategoryService } from './category.service';\r\nimport { CreateCategoryDto } from './dto/create-category.dto';\r\n\r\n@Controller('category')\r\nexport class CategoryController {\r\n  constructor(private categoryService: CategoryService) {}\r\n  @Get()\r\n  getCategory() {\r\n    return this.categoryService.getCategory();\r\n  }\r\n\r\n  @Post()\r\n  createCategory(@Body() params: CreateCategoryDto) {\r\n    return this.categoryService.createCategory(params);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateKitchen(@Body() body: CreateCategoryDto, @Param('id') id: any) {\r\n    const cateogryId = +id;\r\n    console.log('kitchen id', cateogryId);\r\n    return this.categoryService.udpateCategory(cateogryId, body);\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateCategoryDto } from './dto/create-category.dto';\r\n\r\n@Injectable()\r\nexport class CategoryService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getCategory() {\r\n    return await this.prismaService.category.findMany({\r\n      include: {\r\n        kitchen: true,\r\n      },\r\n    });\r\n  }\r\n\r\n  async createCategory(data: CreateCategoryDto) {\r\n    const updatedData = {\r\n      ...data,\r\n      kitchenId: +data.kitchenId,\r\n      categoryCode: +data.categoryCode,\r\n    };\r\n    return await this.prismaService.category.create({\r\n      data: updatedData,\r\n    });\r\n  }\r\n\r\n  async udpateCategory(id: number, data: CreateCategoryDto) {\r\n    const updatedData = {\r\n      ...data,\r\n      kitchenId: +data.kitchenId,\r\n      categoryCode: +data.categoryCode,\r\n    };\r\n    try {\r\n      return this.prismaService.category.update({\r\n        where: { id },\r\n        data: updatedData,\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n}\r\n","import { IsNumber, IsOptional, IsString } from 'class-validator';\r\n\r\nexport class CreateCategoryDto {\r\n  @IsString()\r\n  name!: string;\r\n  @IsString()\r\n  @IsOptional()\r\n  color!: string;\r\n  @IsNumber()\r\n  kitchenId!: number;\r\n\r\n  @IsNumber()\r\n  categoryCode!: number;\r\n  @IsOptional()\r\n  startTime!: string;\r\n  @IsOptional()\r\n  endTime!: string;\r\n}\r\n","export * from './lib/api-feature-order.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { OrderContoller } from './api-feature-order.controller';\r\nimport { OrderService } from './order.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\nimport { PDFService } from './pdf.service';\r\nimport { PrintService } from './print.service';\r\nimport { ApiFeatureAuthModule } from '@hotel/api/feature-auth';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule, ApiFeatureAuthModule],\r\n  controllers: [OrderContoller],\r\n  providers: [OrderService, PDFService, PrintService],\r\n  exports: [PrintService],\r\n})\r\nexport class ApiFeatureOrderModule {}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  Param,\r\n  Patch,\r\n  Post,\r\n  Put,\r\n  Query,\r\n  Req,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { CreateOrderDto } from './dto/create-order.dto';\r\nimport { OrderService } from './order.service';\r\nimport { PaymentDetails, User } from '@hotel/common/types';\r\n\r\nimport { JwtAuthGuard } from '@hotel/api/feature-auth';\r\nimport { OrderItemAddEditDto } from './dto/orderItems-add-edit.dto';\r\n@Controller('orders')\r\nexport class OrderContoller {\r\n  constructor(private orderService: OrderService) {}\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get()\r\n  getRecentNoPaidOrders(@Req() req: any) {\r\n    console.log('recent orders');\r\n    const user = req.user;\r\n    if (user.isCashier) {\r\n      console.log('iam a cashier user.');\r\n      return this.orderService.getRecentNotPaidOrders();\r\n    }\r\n\r\n    return this.orderService.getRecentNotPaidOrdersByUser(user);\r\n  }\r\n\r\n  @Get('print/:id')\r\n  printsamplebill(@Param() params: any) {\r\n    const orderId = +params.id;\r\n\r\n    return this.orderService.printReceipt(orderId);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Patch()\r\n  makeBillForTheOrder(@Body() data: any) {\r\n    console.log('patch requrest for ', data);\r\n    // return this.orderService.printReceipt(data.orderId);\r\n    return this.orderService.makeBillForTheOrder(data.orderId);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('homedelivery')\r\n  getOpenHomeDeliveryOrders() {\r\n    console.log('home delivery router get request has been called.');\r\n    return this.orderService.getOpenHomeDeliveryOrders();\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get(':id')\r\n  getOrderDetails(@Param() params: any) {\r\n    console.log('getting order details');\r\n    const orderId = +params.id;\r\n\r\n    return this.orderService.getOrderDetails(orderId);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post()\r\n  post(@Body() order: CreateOrderDto, @Req() req: any) {\r\n    const appUser: User = req.user;\r\n    // console.log('from the front end', order);\r\n\r\n    return this.orderService.createOrder(order, appUser);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post('qwickpay')\r\n  async qwickPay(\r\n    @Body() order: CreateOrderDto,\r\n    @Req() req: any,\r\n    @Query() query: any\r\n  ) {\r\n    const appUser: User = req.user;\r\n    const paymentDetails: PaymentDetails = {\r\n      discount: query.discount ? Number.parseFloat(query.discount) : 0,\r\n      paidAmount: query.paidAmount ? Number.parseFloat(query.paidAmount) : 0,\r\n      balance: query.balance ? Number.parseFloat(query.balance) : 0,\r\n      mode: query.mode ?? 'cash',\r\n    };\r\n\r\n    const newOrder = await this.orderService.createOrder(order, appUser);\r\n    return this.orderService.payTheBill(newOrder.id, true, paymentDetails);\r\n  }\r\n\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Post('updateItems/:id')\r\n  updateOrderItems(@Body() data: OrderItemAddEditDto[], @Param() params: any) {\r\n    console.log(data, params);\r\n    const orderId = params.id;\r\n    console.log('dto array', data);\r\n    return 'hello world';\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('pay/:id')\r\n  payTheBill(@Param() params: any, @Query() query: any) {\r\n    const orderId = +params.id;\r\n\r\n    const paymentDetails: PaymentDetails = {\r\n      discount: query.discount ? Number.parseFloat(query.discount) : 0,\r\n      paidAmount: query.paidAmount ? Number.parseFloat(query.paidAmount) : 0,\r\n      balance: query.balance ? Number.parseFloat(query.balance) : 0,\r\n      mode: query.mode ?? 'cash',\r\n    };\r\n    const shouldPrintBill = query.shouldPrint ? true : false;\r\n    return this.orderService.payTheBill(\r\n      orderId,\r\n      shouldPrintBill,\r\n      paymentDetails\r\n    );\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('cancel/:id')\r\n  cancelOrder(@Param() params: any, @Query() query: any) {\r\n    const orderId = +params.id;\r\n    const shouldPrintBill = query.shouldPrint ? true : false;\r\n    return this.orderService.cancelTheBill(orderId, shouldPrintBill);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('credit/:id')\r\n  settleAsCreditPay(@Param() params: any, @Query() query: any) {\r\n    const orderId = +params.id;\r\n    console.log('query params credit settle received', query);\r\n    const shouldPrintBill = query.shouldPrint ? true : false;\r\n    return this.orderService.creditSettle(orderId, shouldPrintBill);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post('accepthomedelivery/:id')\r\n  async acceptHomeDelivery(\r\n    @Body() data: any,\r\n    @Param() params: any,\r\n    @Req() req: any\r\n  ) {\r\n    const orderId = +params.id;\r\n    console.log('delivery id to be assinged', data.deliveryUserId);\r\n\r\n    // [TODO] if staff user is the looged in user, need validation to make sure logged and send deliveryId are same\r\n    return this.orderService.acceptHomeDeliveryOrder(\r\n      orderId,\r\n      +data.deliveryUserId\r\n    );\r\n  }\r\n}\r\n","import {\r\n  CartItem,\r\n  OrderItemEdit,\r\n  ResultantCartItem,\r\n  User,\r\n} from '@hotel/common/types';\r\nimport { IsDefined, IsNotEmpty, IsOptional } from 'class-validator';\r\n\r\nexport class CreateOrderDto {\r\n  @IsDefined()\r\n  @IsNotEmpty()\r\n  cartItems!: { [key: string]: CartItem };\r\n  orderItemsEdit!: { [key: string]: OrderItemEdit };\r\n  resultantCartItems!: ResultantCartItem[];\r\n  cartCreatedFor!: User;\r\n\r\n  tableId!: number;\r\n  customerId!: number;\r\n  orderId!: number;\r\n\r\n  total!: number;\r\n\r\n  @IsOptional()\r\n  note?: string;\r\n\r\n  taxesApplied!: [];\r\n\r\n  taxedTotal!: number;\r\n  printKot!: boolean;\r\n  deliveryUserId!: number;\r\n}\r\n","import {\r\n  BadRequestException,\r\n  Injectable,\r\n  NotFoundException,\r\n} from '@nestjs/common';\r\nimport { CreateOrderDto } from './dto/create-order.dto';\r\nimport { PrismaService } from '@hotel/api/data-access-db';\r\nimport { order, orderItem, kitchen } from '@prisma/client';\r\n\r\nimport {\r\n  dateTimeNowMinus,\r\n  dateTimeToDateHHMM,\r\n  getAppliedTaxesAndTaxesTotal,\r\n} from '@hotel/common/util';\r\nimport {\r\n  CartItem,\r\n  OrderStatus,\r\n  OrderType,\r\n  PaymentStatus,\r\n  User,\r\n  UserType,\r\n  Tax,\r\n  OrderItem,\r\n  ResultantCartItem,\r\n  CartItemType,\r\n  SessionStatus,\r\n  KotStatus,\r\n  PaymentDetails,\r\n} from '@hotel/common/types';\r\nimport { PDFService } from './pdf.service';\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n  constructor(\r\n    private prismaService: PrismaService,\r\n    private pdfService: PDFService\r\n  ) {}\r\n\r\n  async testPrismaggregate(orderID: number) {\r\n    const result = await this.prismaService.orderItem.groupBy({\r\n      by: ['customeKey'],\r\n      where: { orderId: orderID },\r\n      _sum: { count: true },\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async getRecentNotPaidOrders() {\r\n    // console.log(dateTimeNowMinus(24));\r\n    // this. shoudl fetch orders of last 24 hours.\r\n    return await this.prismaService.order.findMany({\r\n      where: {\r\n        createdAt: {\r\n          gt: await this.getActiveSessionStartTime(),\r\n        },\r\n        paymentStatus: { notIn: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n        orderStatus: { not: OrderStatus.CANCELLED },\r\n      },\r\n      include: { customer: true, user: true },\r\n      orderBy: { createdAt: 'asc' },\r\n    });\r\n  }\r\n\r\n  private async getActiveSessionStartTime() {\r\n    const activeSession = await this.prismaService.posSession.findFirst({\r\n      where: {\r\n        status: SessionStatus.ACTIVE,\r\n      },\r\n    });\r\n    if (!activeSession) throw new NotFoundException('No active session');\r\n    console.log('active session start time is', activeSession.startTime);\r\n    return activeSession.startTime;\r\n  }\r\n  async getRecentOrders() {\r\n    // console.log(dateTimeNowMinus(24));\r\n    // this. shoudl fetch orders of last 24 hours.\r\n    return await this.prismaService.order.findMany({\r\n      where: {\r\n        createdAt: {\r\n          gt: await this.getActiveSessionStartTime(),\r\n        },\r\n        orderStatus: { not: OrderStatus.CANCELLED },\r\n      },\r\n      include: { customer: true, user: true },\r\n    });\r\n  }\r\n\r\n  async getRecentOrdersByUser(user: User) {\r\n    // console.log(dateTimeNowMinus(24));\r\n    // this. shoudl fetch orders of last 24 hours.\r\n    return await this.prismaService.order.findMany({\r\n      where: {\r\n        createdAt: {\r\n          gt: dateTimeNowMinus(24),\r\n        },\r\n        createdUserId: user.id,\r\n        orderStatus: { not: OrderStatus.CANCELLED },\r\n      },\r\n      include: { customer: true },\r\n    });\r\n  }\r\n\r\n  async getRecentNotPaidOrdersByUser(user: User) {\r\n    // console.log(dateTimeNowMinus(24));\r\n    // this. shoudl fetch orders of last 24 hours.\r\n    return await this.prismaService.order.findMany({\r\n      where: {\r\n        createdAt: {\r\n          gt: dateTimeNowMinus(24),\r\n        },\r\n        createdUserId: user.id,\r\n        paymentStatus: { notIn: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n        orderStatus: { not: OrderStatus.CANCELLED },\r\n      },\r\n      include: { customer: true, user: true },\r\n      orderBy: { createdAt: 'asc' },\r\n    });\r\n  }\r\n\r\n  async getOrderDetails(orderId: number) {\r\n    // const date = new Date();\r\n    // const stringDate = date.toISOString().substring(0, 10);\r\n    // return await this.prismaService.order.findMany({\r\n    //   where: {\r\n    //     createdAt: {\r\n    //       gt: new Date(stringDate),\r\n    //     },\r\n    //   },\r\n    // });\r\n\r\n    return await this.prismaService.order.findUnique({\r\n      where: { id: orderId },\r\n      include: {\r\n        orderItems: {\r\n          include: {\r\n            product: true,\r\n          },\r\n        },\r\n        customer: true,\r\n        user: true,\r\n        kot: {\r\n          include: { Kitchen: true },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async printReceipt(orderId: number) {\r\n    try {\r\n      // await this.prismaService.orderItem.aggregate({\r\n      //   where: { orderId: orderId },\r\n      //   _sum: { amount: true },\r\n      // });\r\n      // get company id from appUser.\r\n      const companyId = 1;\r\n\r\n      const company = await this.prismaService.company.findFirst({\r\n        where: { id: companyId },\r\n        include: {\r\n          taxes: { where: { isActive: true } },\r\n        },\r\n      });\r\n\r\n      //  get order with order items.\r\n\r\n      const order = await this.prismaService.order.findFirst({\r\n        where: { id: orderId },\r\n        include: {\r\n          orderItems: {\r\n            include: {\r\n              product: true,\r\n            },\r\n          },\r\n          table: true,\r\n          customer: true,\r\n          user: true,\r\n          deliveryUser: true,\r\n        },\r\n      });\r\n\r\n      const { orderItems, totalCount, totalItems, orderTotal } =\r\n        await this.getOrderItemsForTheOrderAggregated(orderId);\r\n\r\n      const discountApplied = order?.discountApplied ?? 0;\r\n      // const orderTotal = getOrderItemsTotal(orderItems as unknown as OrderItem[]);\r\n      const taxAppliedTotalandInfo = getAppliedTaxesAndTaxesTotal(\r\n        orderTotal,\r\n        company?.taxes as unknown as Tax[]\r\n      );\r\n\r\n      const totalAfterDiscount =\r\n        taxAppliedTotalandInfo.taxedTotal - discountApplied;\r\n      // send to the print service.\r\n      const customerNameToPrint =\r\n        order?.orderType == 'table'\r\n          ? `${order.customerName} `\r\n          : order?.customer?.firstName;\r\n      const customerLastNameToPrint = order?.customer?.lastName\r\n        ? order.customer.lastName\r\n        : '';\r\n\r\n      const noOfDecimalPlaces = company?.decimalZeros\r\n        ? company.decimalZeros\r\n        : 3;\r\n      const mappedOrderItems = orderItems.map((orderItem) => {\r\n        return {\r\n          ...orderItem,\r\n          amount: orderItem!.amount!.toFixed(noOfDecimalPlaces),\r\n          otherLanguageName: orderItem.product!.secondaryLanguageName,\r\n          individualTotal: (orderItem.count * orderItem!.amount!).toFixed(\r\n            noOfDecimalPlaces\r\n          ),\r\n        };\r\n      });\r\n\r\n      const billType: string = this.getBillTypeFromOrder(order);\r\n\r\n      const isHomeDelivery = order?.orderType == OrderType.HOMEDELIVERY;\r\n      const homeDeliveryUserName = order?.deliveryUser?.name;\r\n      // console.log(mappedOrderItems.length);\r\n      const infoToPrint = {\r\n        companyName: company?.name,\r\n        address: company?.address ? company?.address : '****',\r\n        billDateTime: dateTimeToDateHHMM(order!.createdAt),\r\n        billType,\r\n        orderNumber: `Order No- ${order?.orderNumber}`,\r\n        paymentStatus:\r\n          order?.paymentStatus == 'paid' ? '( PAID )' : '(NOT PAID  )',\r\n        orderTypeTitle:\r\n          order?.orderType == 'table' ? 'Table Info' : 'Customer Info',\r\n        customerName: customerNameToPrint,\r\n        lastName: customerLastNameToPrint,\r\n        waiterName: order?.user.name,\r\n        isHomeDelivery,\r\n        homeDeliveryUserName,\r\n        orderItems: mappedOrderItems,\r\n        total: orderTotal.toFixed(noOfDecimalPlaces),\r\n        appliedTaxesInfo: taxAppliedTotalandInfo.taxesApplied.map((item) => ({\r\n          ...item,\r\n          value: item.value.toFixed(noOfDecimalPlaces),\r\n        })),\r\n        taxedTotal:\r\n          taxAppliedTotalandInfo.taxedTotal.toFixed(noOfDecimalPlaces),\r\n        totalCount,\r\n        totalItems,\r\n        totalAfterDiscount: totalAfterDiscount.toFixed(noOfDecimalPlaces),\r\n        hasDiscountApplied: discountApplied == 0 ? false : true,\r\n        discountApplied: discountApplied.toFixed(noOfDecimalPlaces),\r\n      };\r\n      const printer = company!.printer;\r\n      await this.pdfService.printReceipt(infoToPrint, printer);\r\n      return order;\r\n      return 'Recipt printer successfully.';\r\n    } catch (error) {\r\n      console.log('Error while priting receipt', error);\r\n      throw new NotFoundException({ error: error });\r\n    }\r\n  }\r\n\r\n  getBillTypeFromOrder(order: any) {\r\n    let billType = 'Table';\r\n    if (!order) return billType;\r\n\r\n    switch (order.orderType) {\r\n      case OrderType.HOMEDELIVERY:\r\n        billType = 'Home Delivery';\r\n        break;\r\n      case OrderType.TABLE:\r\n        billType = 'Table';\r\n        break;\r\n      case OrderType.TAKEAWAY:\r\n        billType = 'Takeaway';\r\n    }\r\n\r\n    return billType;\r\n  }\r\n\r\n  async waitRandom() {\r\n    const random = Math.random() * 1000;\r\n    // console.log('random number is ', random);\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, random);\r\n    });\r\n  }\r\n\r\n  async getNextOrderNumber(): Promise<number> {\r\n    try {\r\n      const company = await this.prismaService.company.findFirst();\r\n      if (!company) throw new Error('no company data found');\r\n      console.log('oriingal order number', company.lastOrderNumber);\r\n      // the followind line is temporary fix for concurrency company\r\n      // update error. postgres would not have this error, still keeping the code here.s\r\n      await this.waitRandom();\r\n\r\n      const updatedCompanyDetails = await this.prismaService.company.update({\r\n        where: {\r\n          id: company?.id,\r\n        },\r\n        data: {\r\n          lastOrderNumber: company?.lastOrderNumber + 1,\r\n        },\r\n      });\r\n      console.log(\r\n        'updated company order number',\r\n        updatedCompanyDetails.lastOrderNumber\r\n      );\r\n      return updatedCompanyDetails?.lastOrderNumber;\r\n    } catch (error) {\r\n      console.log('next order number error');\r\n      throw new BadRequestException(error);\r\n    }\r\n  }\r\n\r\n  async createOrder(createOrderDto: CreateOrderDto, appUser: User) {\r\n    // console.log('user is', appUser);\r\n    // console.log('creat dto value', createOrderDto);\r\n    try {\r\n      const printKot = createOrderDto.printKot;\r\n      console.log('print Kot flag value is ', printKot);\r\n      // const tableId = createOrderDto.tableId;\r\n      if (createOrderDto.customerId) {\r\n        const customerId = createOrderDto.customerId;\r\n        // console.log('existing ordre', `${tableId} = ${customerId}`);\r\n        const existingOrder = await this.checkIfCustomerHasRunningOrder(\r\n          customerId\r\n        );\r\n\r\n        if (!existingOrder) throw new Error();\r\n        await this.updateOrderItemsTable(\r\n          existingOrder,\r\n          createOrderDto,\r\n          true,\r\n          appUser,\r\n          printKot\r\n        );\r\n        return existingOrder;\r\n      } else {\r\n        if (createOrderDto.cartCreatedFor.userType == UserType.HOMEDELIVERY) {\r\n          const newOrder = await this.createHomeDeliveryOrder(\r\n            createOrderDto,\r\n            appUser\r\n          );\r\n          if (!newOrder)\r\n            throw new BadRequestException('could not create any new order..');\r\n\r\n          // console.log('order has been created.', newOrder);\r\n          await this.updateOrderItemsTable(\r\n            newOrder,\r\n            createOrderDto,\r\n            false,\r\n            appUser,\r\n            printKot\r\n          );\r\n          return newOrder;\r\n        } else if (\r\n          createOrderDto.cartCreatedFor.userType == UserType.TAKEAWAY\r\n        ) {\r\n          const newOrder = await this.createTakeAwayOrder(\r\n            createOrderDto,\r\n            appUser\r\n          );\r\n          if (!newOrder)\r\n            throw new BadRequestException('could not create any new order..');\r\n\r\n          // console.log('order has been created.', newOrder);\r\n          await this.updateOrderItemsTable(\r\n            newOrder,\r\n            createOrderDto,\r\n            false,\r\n            appUser,\r\n            printKot\r\n          );\r\n          return newOrder;\r\n        } else {\r\n          const newOrder = await this.createTableOrder(createOrderDto, appUser);\r\n          await this.updateOrderItemsTable(\r\n            newOrder,\r\n            createOrderDto,\r\n            false,\r\n            appUser,\r\n            printKot\r\n          );\r\n          return newOrder;\r\n        }\r\n      }\r\n      // no customer is assigned for this.\r\n      // this mean a new cusotmer should be created along with the orders.\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException(error);\r\n    }\r\n  }\r\n  private async createTakeAwayOrder(\r\n    createOrderDto: CreateOrderDto,\r\n    appUser: User\r\n  ) {\r\n    try {\r\n      const nextOrderId = await this.getNextOrderNumber();\r\n      console.log('order id now is', nextOrderId);\r\n      const newCustomer = await this.prismaService.customer.create({\r\n        data: {\r\n          firstName: createOrderDto.cartCreatedFor.firstName,\r\n          lastName: createOrderDto.cartCreatedFor.lastName\r\n            ? createOrderDto.cartCreatedFor.lastName\r\n            : 'no',\r\n        },\r\n      });\r\n\r\n      const newOrder = await this.prismaService.order.create({\r\n        data: {\r\n          customerName: createOrderDto.cartCreatedFor.firstName,\r\n          orderNumber: nextOrderId,\r\n          orderStatus: OrderStatus.INPROGRESS,\r\n          orderType: OrderType.TAKEAWAY,\r\n          paymentStatus: PaymentStatus.NOTPAID,\r\n          createdUserId: appUser.id!,\r\n          customerId: newCustomer.id,\r\n        },\r\n        include: {\r\n          customer: true,\r\n        },\r\n      });\r\n\r\n      console.log('prisma is creating data');\r\n      return newOrder;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException(error);\r\n    }\r\n  }\r\n  private async createHomeDeliveryOrder(\r\n    createOrderDto: CreateOrderDto,\r\n    appUser: User\r\n  ) {\r\n    try {\r\n      const nextOrderId = await this.getNextOrderNumber();\r\n      console.log('order id now is', nextOrderId);\r\n      const newCustomer = await this.prismaService.customer.create({\r\n        data: {\r\n          firstName: createOrderDto.cartCreatedFor.firstName,\r\n          lastName: createOrderDto.cartCreatedFor.lastName\r\n            ? createOrderDto.cartCreatedFor.lastName\r\n            : 'no',\r\n        },\r\n      });\r\n\r\n      const deliveryUserId = createOrderDto.deliveryUserId;\r\n      // const orderstatus =\r\n      //   deliveryUserId == 0 ? OrderStatus.INPROGRESS : OrderStatus.SERVED;\r\n      const newOrder = await this.prismaService.order.create({\r\n        data: {\r\n          customerName: createOrderDto.cartCreatedFor.firstName,\r\n          orderNumber: nextOrderId,\r\n          orderStatus: OrderStatus.INPROGRESS,\r\n          orderType: OrderType.HOMEDELIVERY,\r\n          paymentStatus: PaymentStatus.NOTPAID,\r\n          createdUserId: appUser.id!,\r\n          customerId: newCustomer.id,\r\n          deliveryUserId:\r\n            deliveryUserId == 0 ? null : +createOrderDto.deliveryUserId,\r\n        },\r\n        include: {\r\n          customer: true,\r\n        },\r\n      });\r\n\r\n      console.log('prisma is creating data');\r\n      return newOrder;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException(error);\r\n    }\r\n  }\r\n\r\n  private async updateOrderItemsTable(\r\n    order: order,\r\n    createOrderDto: CreateOrderDto,\r\n    isRunning: boolean,\r\n    appUser: User,\r\n    printKot: boolean\r\n  ) {\r\n    try {\r\n      const orderId = order.id;\r\n      // split order items into cateogry.\r\n      // const orderItems1 = Object.entries(createOrderDto.cartItems).map(\r\n      //   (itemArr) => {\r\n      //     const key = itemArr[0];\r\n      //     const items = itemArr[1];\r\n\r\n      //     const item: CartItem = {\r\n      //       ...items,\r\n      //       key,\r\n      //     };\r\n      //     return item;\r\n      //   }\r\n      // );\r\n\r\n      const orderItems1 = createOrderDto.resultantCartItems;\r\n      // get all the categories with the kitchen name.\r\n      const categories = await this.prismaService.category.findMany({\r\n        select: {\r\n          id: true,\r\n          kitchen: true,\r\n        },\r\n      });\r\n\r\n      const kitchenIdVice: { [x: string]: ResultantCartItem[] } = {};\r\n      const kitchenTempArra = [];\r\n      let hasEditItems = false;\r\n      let hasDeleteItems = false;\r\n      orderItems1.forEach((orderItem) => {\r\n        if (orderItem.cartItemType === CartItemType.DELETE) {\r\n          hasDeleteItems = true;\r\n        }\r\n        if (orderItem.cartItemType === CartItemType.EDIT) {\r\n          hasEditItems = true;\r\n        }\r\n        const catId = orderItem.product.categoryId;\r\n\r\n        const kitchenDetail = categories.find(\r\n          (cat) => cat.id === catId\r\n        )?.kitchen;\r\n        kitchenTempArra.push(kitchenDetail);\r\n        const kitId = kitchenDetail?.id ?? 'noPrinter';\r\n        kitchenIdVice[kitId] = [...(kitchenIdVice[kitId] || []), orderItem];\r\n      });\r\n\r\n      const createdKots: any[] = [];\r\n      // promise .all is need to handle the wait for the writes to kot table to avoid error.\r\n      await Promise.all(\r\n        Object.entries(kitchenIdVice).map(\r\n          async ([kitId, resultantCartItems]) => {\r\n            const kotCreated = await this.prismaService.kot.create({\r\n              data: {\r\n                kitchenId: +kitId,\r\n                updatedUserId: appUser.id!,\r\n                orderId: order.id,\r\n                status: KotStatus.INPROGRESS,\r\n                orderItems: {\r\n                  create: resultantCartItems.map((resultantCartItem) => {\r\n                    const orderItem = {\r\n                      count: resultantCartItem.count,\r\n                      customeKey: resultantCartItem.key ?? '',\r\n                      name: resultantCartItem.name,\r\n                      orderId: orderId,\r\n                      amount: resultantCartItem.amount,\r\n                      productId: resultantCartItem.product.id,\r\n                      orderItemType: resultantCartItem.cartItemType,\r\n                      message: resultantCartItem.message,\r\n                      modifiers: resultantCartItem.modifiers\r\n                        ? resultantCartItem.modifiers?.reduce(\r\n                            (prev, curr) => prev.concat(curr.name, ', '),\r\n                            ''\r\n                          )\r\n                        : '',\r\n                    };\r\n                    return orderItem;\r\n                  }),\r\n                },\r\n              },\r\n              select: {\r\n                id: true,\r\n                createdAt: true,\r\n                updatedUser: true,\r\n                Kitchen: true,\r\n\r\n                orderItems: true,\r\n              },\r\n            });\r\n\r\n            // console.log(kotCreated);\r\n\r\n            createdKots.push(kotCreated);\r\n            // await this.printKots(kotCreated);\r\n          }\r\n        )\r\n      );\r\n      // filter KOT wich has print option no selected so that it won't be printed\r\n\r\n      createdKots\r\n        .filter((kot) => kot.Kitchen.shouldPrintKot)\r\n        .forEach((kot) => {\r\n          const kotData = this.createKOTData(\r\n            kot,\r\n            order,\r\n            appUser,\r\n            hasDeleteItems,\r\n            hasEditItems,\r\n            isRunning\r\n          );\r\n          if (printKot) {\r\n            console.log('print kot is true in this area', printKot);\r\n            // not waiting for the print service to finsh. optimization.\r\n            this.pdfService.printKot(kotData);\r\n          }\r\n        });\r\n\r\n      // Object.entries(kitchenIdVice).forEach(async ([kitId, cartItems]) => {\r\n      //   const kotCreated = await this.prismaService.kot.create({\r\n      //     data: {\r\n      //       kitchenId: +kitId,\r\n      //       updatedUserId: appUser.id!,\r\n\r\n      //       orderItems: {\r\n      //         create: cartItems.map((cartItem) => {\r\n      //           const orderItem = {\r\n      //             count: cartItem.count,\r\n      //             customeKey: cartItem.key ?? '',\r\n      //             name:\r\n      //               cartItem.product.name +\r\n      //               (cartItem.variant ? '-' + cartItem.variant.name : ''),\r\n      //             orderId: orderId,\r\n      //             amount: this.getCartItemTotal(cartItem),\r\n      //             productId: cartItem.product.id,\r\n      //             // OrderItemType: isRunning ? 'running' : 'new',\r\n      //             modifiers: cartItem.modifiers\r\n      //               ? cartItem.modifiers?.reduce(\r\n      //                   (prev, curr) => prev.concat(curr.description, ', '),\r\n      //                   ''\r\n      //                 )\r\n      //               : '',\r\n      //           };\r\n      //           return orderItem;\r\n      //         }),\r\n      //       },\r\n      //     },\r\n      //     select: {\r\n      //       id: true,\r\n      //       createdAt: true,\r\n      //       updatedUser: true,\r\n      //       Kitchen: true,\r\n\r\n      //       orderItems: true,\r\n      //     },\r\n      //   });\r\n\r\n      //   console.log(kotCreated);\r\n      //   createdKots.push(kotCreated.id);\r\n      //   // await this.printKots(kotCreated);\r\n      //   const kotData = this.createKOTData(kotCreated, order, appUser);\r\n      //   await this.pdfService.printKot(kotData);\r\n      // });\r\n      return order;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException(error);\r\n    }\r\n  }\r\n\r\n  private createKOTData(\r\n    kot: {\r\n      createdAt: Date;\r\n      updatedUser: any;\r\n      orderItems: orderItem[];\r\n      Kitchen: kitchen | null;\r\n      id: number;\r\n    },\r\n    order: order,\r\n    user: User,\r\n    hasDeleteItems: boolean,\r\n    hasEditItems: boolean,\r\n    isRunningOrder: boolean\r\n  ) {\r\n    const customerInfor = (order as unknown as any).customer;\r\n    const firstName = customerInfor.firstName;\r\n    const secondName = customerInfor.lastName ? customerInfor.lastName : '****';\r\n    const updatedData = {\r\n      kitchenName: kot.Kitchen!.name ? kot.Kitchen!.name : 'KITCHEN',\r\n      printer: kot.Kitchen!.printer,\r\n      ticketId: `KOT- ${kot.id}`,\r\n      billDate: dateTimeToDateHHMM(kot.createdAt),\r\n      orderNumber: `Order No- ${order?.orderNumber}`,\r\n      orderTypeTitle:\r\n        order?.orderType == 'table' ? 'Table Info' : 'Customer Info',\r\n\r\n      kotType: order?.orderType == 'table' ? 'Dine In KOT' : 'Take Away KOT',\r\n      isRunningOrder,\r\n      tableNumber: order.customerName,\r\n      createdForFirstName: firstName ? firstName : 'First Name',\r\n      createdForSecondName: secondName ? secondName : 'Second Name',\r\n      waiterName: user.name,\r\n      hasDeleteItems,\r\n      hasEditItems,\r\n      orderItems: kot.orderItems,\r\n      numberOfItems: kot.orderItems.length.toString() ?? '',\r\n      quantity:\r\n        kot.orderItems\r\n          .reduce((prev, item) => prev + (item.count > 0 ? item.count : 0), 0)\r\n          .toString() ?? '',\r\n    };\r\n\r\n    return updatedData;\r\n  }\r\n  private getCartItemTotal(cartItem: CartItem) {\r\n    let productPrice = cartItem.variant\r\n      ? cartItem.variant.price\r\n      : cartItem.product.price;\r\n    if (cartItem.modifiers) {\r\n      productPrice =\r\n        productPrice +\r\n        cartItem.modifiers.reduce((prev, modifier) => prev + modifier.price, 0);\r\n    }\r\n    return productPrice;\r\n  }\r\n\r\n  private async checkIfCustomerHasRunningOrder(customerId: number) {\r\n    try {\r\n      const existingOrderFortheTable = await this.prismaService.order.findFirst(\r\n        {\r\n          where: {\r\n            customerId: customerId,\r\n            NOT: {\r\n              orderStatus: OrderStatus.DELIVERED,\r\n            },\r\n          },\r\n          include: {\r\n            customer: true,\r\n          },\r\n        }\r\n      );\r\n\r\n      // console.log('existing order', existingOrderFortheTable);\r\n\r\n      return existingOrderFortheTable;\r\n    } catch (error) {\r\n      throw new BadRequestException(error);\r\n    }\r\n  }\r\n\r\n  private async createTableOrder(\r\n    createOrderDto: CreateOrderDto,\r\n    appUser: User\r\n  ) {\r\n    try {\r\n      const tableId = createOrderDto.tableId;\r\n      const nextOrderId = await this.getNextOrderNumber();\r\n      console.log('order id now is', nextOrderId);\r\n      const newCustomer = await this.prismaService.customer.create({\r\n        data: {\r\n          firstName: createOrderDto.cartCreatedFor.firstName,\r\n          lastName: createOrderDto.cartCreatedFor.lastName\r\n            ? createOrderDto.cartCreatedFor.lastName\r\n            : '***',\r\n        },\r\n      });\r\n\r\n      const newOrder = await this.prismaService.order.create({\r\n        data: {\r\n          customerName: createOrderDto.cartCreatedFor.firstName,\r\n          customerId: newCustomer.id,\r\n          tableId: tableId,\r\n          orderNumber: nextOrderId,\r\n          orderStatus: OrderStatus.INPROGRESS,\r\n          orderType: OrderType.TABLE,\r\n          paymentStatus: PaymentStatus.NOTPAID,\r\n          createdUserId: appUser.id!,\r\n        },\r\n        include: {\r\n          customer: true,\r\n        },\r\n      });\r\n\r\n      return newOrder;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException({\r\n        errorMessage: 'Could not create new order.',\r\n      });\r\n    }\r\n  }\r\n\r\n  async makeBillForTheOrder(orderId: number) {\r\n    // check if the order is in in progress status. no need as front end takes care of it.\r\n\r\n    try {\r\n      const updatedOrder = await this.prismaService.order.update({\r\n        where: { id: orderId },\r\n        data: {\r\n          orderStatus: OrderStatus.SERVED,\r\n          paymentStatus: PaymentStatus.NOTPAID,\r\n        },\r\n        include: {\r\n          orderItems: {\r\n            include: {\r\n              product: {\r\n                select: {\r\n                  secondaryLanguageName: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n      // console.log('updated order', updatedOrder);\r\n      this.printReceipt(orderId);\r\n      return updatedOrder;\r\n    } catch (error) {\r\n      throw new Error('format later.');\r\n    }\r\n  }\r\n\r\n  async payTheBill(\r\n    orderId: number,\r\n    shouldPrintBill: boolean,\r\n    paymentDetails: PaymentDetails\r\n  ) {\r\n    // check if the order is in in progress status. no need as front end takes care of it.\r\n    console.log('paybill paydetails', paymentDetails);\r\n\r\n    try {\r\n      const updatedOrder = await this.prismaService.order.update({\r\n        where: { id: orderId },\r\n        data: {\r\n          paymentStatus: PaymentStatus.PAID,\r\n          orderStatus: OrderStatus.SERVED,\r\n          ...(paymentDetails.paidAmount && {\r\n            paidAmount: paymentDetails.paidAmount,\r\n            discountApplied: paymentDetails.discount,\r\n            balance: paymentDetails.balance,\r\n            paymentMode: paymentDetails.mode,\r\n          }),\r\n        },\r\n        include: {\r\n          orderItems: {\r\n            include: {\r\n              product: {\r\n                select: {\r\n                  secondaryLanguageName: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n      // console.log('updated order', updatedOrder);\r\n      if (shouldPrintBill) {\r\n        this.printReceipt(orderId);\r\n      }\r\n      return updatedOrder;\r\n    } catch (error) {\r\n      throw new Error('format later.');\r\n    }\r\n  }\r\n\r\n  async cancelTheBill(orderId: number, shouldPrintBill: boolean) {\r\n    // check if the order is in in progress status. no need as front end takes care of it.\r\n\r\n    try {\r\n      const updatedOrder = await this.prismaService.order.update({\r\n        where: { id: orderId },\r\n        data: {\r\n          orderStatus: OrderStatus.CANCELLED,\r\n        },\r\n        include: {\r\n          orderItems: {\r\n            include: {\r\n              product: {\r\n                select: {\r\n                  secondaryLanguageName: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n      // console.log('updated order', updatedOrder);\r\n      if (shouldPrintBill) {\r\n        this.printReceipt(orderId);\r\n      }\r\n      return updatedOrder;\r\n    } catch (error) {\r\n      throw new Error('format later.');\r\n    }\r\n  }\r\n  async creditSettle(orderId: number, shouldPrintBill: boolean) {\r\n    // check if the order is in in progress status. no need as front end takes care of it.\r\n\r\n    try {\r\n      const updatedOrder = await this.prismaService.order.update({\r\n        where: { id: orderId },\r\n        data: {\r\n          paymentStatus: PaymentStatus.CREDIT,\r\n          orderStatus: OrderStatus.SERVED,\r\n        },\r\n        include: {\r\n          orderItems: {\r\n            include: {\r\n              product: {\r\n                select: {\r\n                  secondaryLanguageName: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n      // console.log('updated order', updatedOrder);\r\n      if (shouldPrintBill) {\r\n        this.printReceipt(orderId);\r\n      }\r\n      return updatedOrder;\r\n    } catch (error) {\r\n      throw new Error('format later.');\r\n    }\r\n  }\r\n  private async getOrderItemsForTheOrderAggregated(orderId: number): Promise<{\r\n    orderItems: OrderItem[];\r\n    totalCount: number;\r\n    totalItems: number;\r\n    orderTotal: number;\r\n  }> {\r\n    let totalItems = 0;\r\n    let totalCount = 0;\r\n    let orderTotal = 0;\r\n    const result = await this.prismaService.orderItem.groupBy({\r\n      by: ['customeKey'],\r\n      where: { orderId },\r\n      _sum: { count: true },\r\n    });\r\n\r\n    const uniqeOrderItems = await this.prismaService.orderItem.findMany({\r\n      where: { orderId },\r\n      distinct: ['customeKey'],\r\n    });\r\n\r\n    // console.log(uniqeOrderItems);\r\n    const mappedWithResult = uniqeOrderItems.map(\r\n      (item) =>\r\n        result.filter(\r\n          (resultItem) => resultItem.customeKey === item.customeKey\r\n        )[0]\r\n    );\r\n    // console.log('groupby', result);\r\n    // console.log('mapped result ', mappedWithResult);\r\n\r\n    const aggregatedOrderItems = await Promise.all(\r\n      mappedWithResult.map(async (item) => {\r\n        const dbItem = await this.prismaService.orderItem.findFirst({\r\n          where: { customeKey: item.customeKey, orderId },\r\n          include: { product: true },\r\n        });\r\n        const updateOrderItemWithCount = {\r\n          ...dbItem,\r\n          count: item._sum.count,\r\n        } as unknown as OrderItem | null;\r\n        // console.log(updateOrderItemWithCount);\r\n        totalItems =\r\n          totalItems + (updateOrderItemWithCount!.count! == 0 ? 0 : 1);\r\n        orderTotal =\r\n          orderTotal +\r\n          updateOrderItemWithCount!.amount! * updateOrderItemWithCount!.count!;\r\n        totalCount = totalCount + updateOrderItemWithCount!.count!;\r\n\r\n        return updateOrderItemWithCount;\r\n      })\r\n    );\r\n\r\n    // filter item which has count zero because of order edit feature.\r\n    const filtedItems = aggregatedOrderItems.filter((item) => item?.count != 0);\r\n    const agregated = {\r\n      orderItems: filtedItems as OrderItem[],\r\n      totalCount: totalCount,\r\n      totalItems: totalItems,\r\n      orderTotal,\r\n    };\r\n    return agregated;\r\n  }\r\n\r\n  async updateOrderItemsForTheOrder(orderId: number, orderItems: OrderItem[]) {\r\n    try {\r\n      // await this.prismaService.orderItem.cre;/\r\n      console.log('order id is', orderId);\r\n      console.log('order details', orderItems);\r\n    } catch (error) {\r\n      console.log('erro while updating orerItems.');\r\n    }\r\n  }\r\n\r\n  async getOpenHomeDeliveryOrders() {\r\n    try {\r\n      const openDeliveryOrders = await this.prismaService.order.findMany({\r\n        where: {\r\n          deliveryUserId: null,\r\n          orderType: OrderType.HOMEDELIVERY,\r\n          orderStatus: { not: OrderStatus.CANCELLED },\r\n          createdAt: { gte: await this.getActiveSessionStartTime() },\r\n        },\r\n        include: { customer: true, user: true },\r\n      });\r\n      return openDeliveryOrders;\r\n    } catch (erorr) {\r\n      throw new NotFoundException();\r\n    }\r\n  }\r\n\r\n  async acceptHomeDeliveryOrder(orderId: number, deliveryUserId: number) {\r\n    try {\r\n      const updatedOrder = await this.prismaService.order.update({\r\n        where: { id: orderId },\r\n        data: {\r\n          deliveryUserId,\r\n        },\r\n      });\r\n\r\n      return updatedOrder;\r\n    } catch (error) {\r\n      console.log('could not set homedelivery user', error);\r\n      throw new BadRequestException();\r\n    }\r\n  }\r\n}\r\n","export * from './lib/common-util';\r\nexport * from './lib/cartItems.util';\r\n","import { AppliedTaxInfo, Cart, OrderItem, Tax } from '@hotel/common/types';\r\n\r\nimport { DateTime } from 'luxon';\r\n\r\nexport function commonUtil(): string {\r\n  return 'common-util';\r\n}\r\n\r\nexport const getOrderItemsTotal = (orderItems: OrderItem[]): number => {\r\n  const totalOfOderItems = +Object.values(orderItems).reduce(\r\n    (tot, orderItem) => {\r\n      return tot + orderItem.amount!;\r\n    },\r\n    0\r\n  );\r\n  return +totalOfOderItems.toFixed(3);\r\n};\r\n\r\nexport const getAppliedTaxesAndTaxesTotal = (\r\n  total: number,\r\n  taxes: Tax[]\r\n): {\r\n  taxesApplied: AppliedTaxInfo[];\r\n  taxedTotal: number;\r\n} => {\r\n  const taxAppliedInfo = {\r\n    taxesApplied: taxes?.map((tax) => {\r\n      return {\r\n        taxName: tax.printName,\r\n        value: getTaxedSubTotal(total, tax),\r\n      };\r\n    }),\r\n    taxedTotal: taxes?.reduce((a, b) => a + getTaxedSubTotal(total, b), total),\r\n  };\r\n  return taxAppliedInfo;\r\n};\r\n\r\nexport const getTaxedSubTotal = (total: number, tax: Tax): number => {\r\n  if (tax.isPercentage) {\r\n    return +(total * 0.01 * tax.value);\r\n  } else {\r\n    return +tax.value;\r\n  }\r\n};\r\n\r\nexport const dateTimeToDateHHMM = (dateTime: Date) =>\r\n  DateTime.fromJSDate(dateTime).toLocaleString(DateTime.DATETIME_SHORT);\r\n\r\nexport const dateTimeNowMinus = (hoursToSubtract: number): Date => {\r\n  return DateTime.now().minus({ hour: hoursToSubtract }).toJSDate();\r\n};\r\n\r\nexport const timesAgoFormat = (datetime: string) =>\r\n  DateTime.fromISO(datetime).toRelative();\r\n\r\nexport const getStartOfTheDay = () => DateTime.now().startOf('day').toJSDate();\r\nexport const getStartOfTheWeek = () =>\r\n  DateTime.now().startOf('week').toJSDate();\r\nexport const getStartOfTheMonth = () =>\r\n  DateTime.now().startOf('month').toJSDate();\r\nexport const getOnlyCurrentDateWithoutTime = () =>\r\n  DateTime.now().toLocaleString(DateTime.DATE_SHORT);\r\nexport const aggregateOrderItems = (orderItems: OrderItem[]) => {\r\n  let totalQuantityCount = 0;\r\n  let totalItemsCount = 0;\r\n  let totalAmount = 0;\r\n  const itemObj: Record<string, OrderItem> = {};\r\n  orderItems.forEach((orderItem) => {\r\n    const key = orderItem.customeKey!;\r\n    itemObj[key] = {\r\n      ...(itemObj[key] || {}),\r\n      ...{\r\n        ...orderItem,\r\n        id: itemObj[key] ? itemObj[key].id : orderItem.id, // This step is neeed to keep the sort order if item had edit later on but still need to keep order at the top even had edits\r\n        count: itemObj[key]\r\n          ? itemObj[key].count + orderItem.count\r\n          : orderItem.count,\r\n      },\r\n    };\r\n  });\r\n\r\n  // Sort is needed to fix the unordered keys of the object. this is making order of items displayed on the screen not in the order it was created.\r\n  const aggregatedOrderItemsArr = Object.values(itemObj).sort((a, b) => {\r\n    if (a.id && b.id) {\r\n      return a.id - b.id;\r\n    }\r\n    return 0;\r\n  });\r\n  Object.values(itemObj).forEach((item) => {\r\n    totalQuantityCount = totalQuantityCount + item.count;\r\n    totalItemsCount = totalItemsCount + 1;\r\n    totalAmount = totalAmount + item.count * item.amount!;\r\n  });\r\n\r\n  return {\r\n    aggregated: aggregatedOrderItemsArr,\r\n    totalAmount,\r\n    totalQuantityCount,\r\n    totalItemsCount,\r\n  };\r\n};\r\n","module.exports = require(\"luxon\");","import {\r\n  CartItem,\r\n  CartItemType,\r\n  OrderItemEdit,\r\n  ResultantCartItem,\r\n} from '@hotel/common/types';\r\nexport const getCartItemTotalFromVariantAndModifiers = (cartItem: CartItem) => {\r\n  let productPrice = cartItem.variant\r\n    ? cartItem.variant.price\r\n    : cartItem.product.price;\r\n  if (cartItem.modifiers) {\r\n    productPrice =\r\n      productPrice +\r\n      cartItem.modifiers.reduce((prev, modifier) => prev + modifier.price, 0);\r\n  }\r\n  return productPrice;\r\n};\r\n\r\nexport const getCartItemNameFromVariant = (cartItem: CartItem) => {\r\n  return (\r\n    cartItem.product.name +\r\n    (cartItem.variant ? '-' + cartItem.variant.name : '')\r\n  );\r\n};\r\n\r\nexport const getResultantCartItems = (\r\n  cartItemObj: { [key: string]: CartItem },\r\n  orderEditItemsObj: { [key: string]: OrderItemEdit }\r\n) => {\r\n  const cartItems = Object.values(cartItemObj);\r\n  const orderItemEdits = Object.values(orderEditItemsObj);\r\n  const resultantCartItemsArray: ResultantCartItem[] = [];\r\n\r\n  if (!orderItemEdits.length && !cartItems.length) {\r\n    console.log('both zero return');\r\n    return [];\r\n  }\r\n  // compare each key with key in orderEdit.\r\n\r\n  if (cartItems.length) {\r\n    console.log('cart items have somethign in it.');\r\n    Object.entries(cartItemObj).map((item) => {\r\n      const [key, cartItem] = item;\r\n      const currentCountInCart = cartItem.count;\r\n      if (orderEditItemsObj[key]) {\r\n        console.log('current cart item is in the order edit');\r\n        const orderEdit = orderEditItemsObj[key];\r\n        const originalCount = orderEdit.orderItem.count;\r\n        const updatedOrderEditCount = orderEdit.count;\r\n\r\n        const resultantCount = updatedOrderEditCount + currentCountInCart;\r\n\r\n        console.log('result count', resultantCount);\r\n        if (resultantCount <= 0) {\r\n          // this condition is equivalent to deleting the time.\r\n          const resultantCartItem: ResultantCartItem = {\r\n            amount: getCartItemTotalFromVariantAndModifiers(cartItem),\r\n            cartItemType: CartItemType.DELETE,\r\n            count: resultantCount,\r\n            key: key,\r\n            message: '0',\r\n            name: getCartItemNameFromVariant(cartItem),\r\n            originalCount: originalCount,\r\n            product: cartItem.product,\r\n            modifiers: cartItem.modifiers,\r\n            variant: cartItem.variant,\r\n            sortOrder: cartItem.sortOrder || 0,\r\n          };\r\n\r\n          resultantCartItemsArray.push(resultantCartItem);\r\n          delete orderEditItemsObj[key];\r\n        } else {\r\n          // this is a new item which is adding.\r\n          const resultantCartItem: ResultantCartItem = {\r\n            amount: getCartItemTotalFromVariantAndModifiers(cartItem),\r\n            cartItemType: CartItemType.NEW,\r\n            count: resultantCount,\r\n            key: key,\r\n            message: `${resultantCount}`,\r\n            name: getCartItemNameFromVariant(cartItem),\r\n            originalCount: originalCount,\r\n            product: cartItem.product,\r\n            modifiers: cartItem.modifiers,\r\n            variant: cartItem.variant,\r\n            sortOrder: cartItem.sortOrder || 0,\r\n          };\r\n\r\n          resultantCartItemsArray.push(resultantCartItem);\r\n        }\r\n        // else {\r\n        //   // this means negative resultant. item is edited from one count to other.\r\n        //   const resultantCartItem: ResultantCartItem = {\r\n        //     amount: getCartItemTotalFromVariantAndModifiers(cartItem),\r\n        //     cartItemType: CartItemType.EDIT,\r\n        //     count: resultantCount,\r\n        //     key: key,\r\n        //     message: 'Edited an Item',\r\n        //     name: getCartItemNameFromVariant(cartItem),\r\n        //     originalCount: originalCount,\r\n        //     product: cartItem.product,\r\n        //     modifiers: cartItem.modifiers,\r\n        //     variant: cartItem.variant,\r\n        //   };\r\n        //   resultantCartItemsArray.push(resultantCartItem);\r\n        // }\r\n      } else {\r\n        console.log('only cartitems have items');\r\n        const resultantCartItem: ResultantCartItem = {\r\n          amount: getCartItemTotalFromVariantAndModifiers(cartItem),\r\n          cartItemType: CartItemType.NEW,\r\n          count: cartItem.count,\r\n          key: key,\r\n          message: `${cartItem.count}`,\r\n          name: getCartItemNameFromVariant(cartItem),\r\n          originalCount: cartItem.count,\r\n          product: cartItem.product,\r\n          modifiers: cartItem.modifiers,\r\n          variant: cartItem.variant,\r\n          sortOrder: cartItem.sortOrder || 0,\r\n        };\r\n        resultantCartItemsArray.push(resultantCartItem);\r\n      }\r\n    });\r\n  }\r\n  if (orderItemEdits.length) {\r\n    console.log('only order edit has items');\r\n\r\n    Object.entries(orderEditItemsObj).map((item) => {\r\n      const [key, orderItemEditItem] = item;\r\n      const finalCount =\r\n        orderItemEditItem.orderItem.count + orderItemEditItem.count;\r\n      let resultantCartItem: ResultantCartItem = {\r\n        amount: orderItemEditItem.orderItem.amount || 0,\r\n        cartItemType: CartItemType.NEW,\r\n        count: orderItemEditItem.count,\r\n        key: key,\r\n        message: `${orderItemEditItem.orderItem.count}->${orderItemEditItem.count} `,\r\n        name: orderItemEditItem.orderItem.name || 'No name',\r\n        originalCount: orderItemEditItem.orderItem.count,\r\n        product: orderItemEditItem.orderItem.product!,\r\n        modifiers: orderItemEditItem.orderItem.modifiers!,\r\n        sortOrder: 0,\r\n      };\r\n      if (finalCount > orderItemEditItem.orderItem.count) {\r\n        // add a new item.\r\n        resultantCartItem = {\r\n          ...resultantCartItem,\r\n          cartItemType: CartItemType.NEW,\r\n          message: `${orderItemEditItem.count}`,\r\n        };\r\n      } else if (finalCount <= 0) {\r\n        // item deleted.\r\n        resultantCartItem = {\r\n          ...resultantCartItem,\r\n          cartItemType: CartItemType.DELETE,\r\n          message: `${orderItemEditItem.orderItem.count}-0`,\r\n        };\r\n      } else {\r\n        // item counted edit to a less value.\r\n        resultantCartItem = {\r\n          ...resultantCartItem,\r\n          count: orderItemEditItem.count,\r\n          cartItemType: CartItemType.EDIT,\r\n          message: `${orderItemEditItem.orderItem.count}-${finalCount}`,\r\n        };\r\n      }\r\n\r\n      // const resultantCartItem: ResultantCartItem = {\r\n      //   amount: orderItemEditItem.orderItem.amount || 0,\r\n      //   cartItemType: finalCount <= 0? CartItemType.DELETE : CartItemType.EDIT,\r\n      //   count: orderItemEditItem.count,\r\n      //   key: key,\r\n      //   message: `${orderItemEditItem.orderItem.count}->${orderItemEditItem.count} `,\r\n      //   name: orderItemEditItem.orderItem.name || 'No name',\r\n      //   originalCount: orderItemEditItem.orderItem.count,\r\n      //   product: orderItemEditItem.orderItem.product!,\r\n      //   modifiers: orderItemEditItem.orderItem.modifiers!,\r\n      // };\r\n\r\n      resultantCartItemsArray.push(resultantCartItem);\r\n    });\r\n  }\r\n\r\n  console.log('resultatn', resultantCartItemsArray);\r\n  return resultantCartItemsArray.sort((a, b) => a.sortOrder - b.sortOrder);\r\n};\r\n","export * from './lib/common-types';\r\nexport * from './lib/models';\r\n","export function commonTypes(): string {\r\n  return 'common-types';\r\n}\r\n","export * from './product';\r\nexport * from './cart';\r\nexport * from './user';\r\nexport * from './organisation';\r\nexport * from './taxes';\r\nexport * from './order';\r\nexport * from './table';\r\nexport * from './countries';\r\nexport * from './count.dialog';\r\nexport * from './modifier.dialog';\r\nexport * from './company.dialog';\r\nexport * from './pos.session';\r\nexport * from './printer';\r\nexport * from './kitchen';\r\nexport * from './kitchen.dialog';\r\nexport * from './category.dialog';\r\nexport * from './table.dialog';\r\nexport * from './product.dialog';\r\nexport * from './tax.dialog';\r\nexport * from './floor.dialog';\r\nexport * from './user.dialog';\r\nexport * from './variant.dialog';\r\nexport * from './confirm.dialog.data';\r\nexport * from './cart-item-price.dialog.data';\r\n","import { Kitchen } from './kitchen';\r\n\r\nexport interface Category {\r\n  id: number;\r\n  menuId?: string;\r\n  accountId?: string;\r\n  name: string;\r\n  description?: string;\r\n  archived: boolean;\r\n  products?: Product[] | null;\r\n  alwaysOpen: boolean;\r\n  day?: null;\r\n  openTime?: null;\r\n  closeTime?: null;\r\n  openAllDay?: null;\r\n  hours?: null[] | null;\r\n  adminIndex?: number;\r\n  categoryCode?: number;\r\n  kitchen?: Kitchen;\r\n}\r\nexport interface Product {\r\n  id: number;\r\n  name: string;\r\n  secondaryLanguageName?: string;\r\n  description?: string;\r\n  price: number;\r\n  cost?: number;\r\n  image: string;\r\n  inStock?: boolean;\r\n  hasVariant?: boolean;\r\n  hasModifiers?: boolean;\r\n  isArchived?: boolean;\r\n  isAvailable?: boolean;\r\n  onSale?: boolean;\r\n  categoryId: number;\r\n  archived: boolean;\r\n  video?: string;\r\n  popular?: boolean;\r\n  printName?: string;\r\n  modifierGroups?: ModifierGroup[] | null;\r\n  variants?: Variant[] | null;\r\n  indexInCategory?: number;\r\n\r\n  qwickViewOrder?: number;\r\n  code?: number;\r\n}\r\n\r\nexport interface Variant {\r\n  id?: number;\r\n  name: string;\r\n  price: number;\r\n  productId?: number;\r\n}\r\n\r\nexport interface ProductImage {\r\n  storageName: string;\r\n  downloadUrl: string;\r\n}\r\nexport interface ModifierGroup {\r\n  id?: number;\r\n  description?: string;\r\n  price?: number;\r\n  image?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  printName?: string;\r\n  printModifiersAsItems?: boolean;\r\n  modifiers?: Modifier[];\r\n}\r\n\r\nexport interface Modifier {\r\n  name: string;\r\n  price: number;\r\n  id?: number;\r\n  modifierGroupId?: number;\r\n}\r\n\r\ntype ModifierProductEntity = Omit<Product, 'modifierGroups'>;\r\nexport type CategoryViseProducts = { [Key: string]: Product[] };\r\n\r\nexport interface ProductSortData {\r\n  _id: string;\r\n  indexInCategory: number;\r\n}\r\n\r\nexport interface ProductBoolFieldUpdateData {\r\n  fieldName: string;\r\n  value: boolean;\r\n}\r\n\r\nexport interface ProductStat {\r\n  count: number;\r\n  name: string;\r\n}\r\n","import { OrderItem, OrderItemEdit } from './order';\r\nimport { Modifier, Product, Variant } from './product';\r\nimport { Tax } from './taxes';\r\nimport { User } from './user';\r\n\r\nexport interface CartItem {\r\n  count: number;\r\n  product: Product;\r\n  modifiers?: Modifier[];\r\n  variant?: Variant | null;\r\n  key?: string;\r\n  sortOrder?: number;\r\n}\r\n\r\nexport interface Cart {\r\n  createdAt?: Date;\r\n  cartCreatedFor?: User | null;\r\n  cartItems: { [key: string]: CartItem };\r\n  orderItemsEdit: { [key: string]: OrderItemEdit };\r\n  resultantCartItems: ResultantCartItem[];\r\n  placeOrderSpinner: boolean;\r\n  createdBy?: User;\r\n  taxes?: Tax[];\r\n  note?: string;\r\n  tableId?: number;\r\n  customerId?: number;\r\n  existingOrderId?: number;\r\n  printKot?: boolean;\r\n  deliveryUserId?: number;\r\n}\r\n\r\nexport interface ResultantCartItem {\r\n  key: string;\r\n  name: string;\r\n  product: Product;\r\n  amount: number;\r\n  originalCount: number;\r\n  count: number;\r\n  message: string;\r\n  modifiers?: Modifier[];\r\n  variant?: Variant | null;\r\n  cartItemType: CartItemType;\r\n  sortOrder: number;\r\n}\r\n\r\nexport enum CartItemType {\r\n  NEW = 'N',\r\n  EDIT = 'E',\r\n  DELETE = 'D',\r\n}\r\n","import { FormatedCountry } from './countries';\r\n\r\nexport enum UserType {\r\n  ADMIN = 'admin',\r\n  ONLINE = 'online',\r\n  TABLE = 'table',\r\n  STAFF = 'staff',\r\n  TAKEAWAY = 'takeaway',\r\n  HOMEDELIVERY = 'homedelivery',\r\n}\r\n\r\nexport interface User {\r\n  id?: number;\r\n  email?: string;\r\n  companyId?: string;\r\n  name?: string; //this is temporrary as db update to firstName and lastName.. update this.\r\n  phone?: string; //this is temporrary as db s.\r\n  firstName: string;\r\n  lastName?: string;\r\n  username?: string;\r\n  userType: UserType;\r\n  token?: string;\r\n  country?: FormatedCountry;\r\n  isAdmin?: boolean;\r\n  isCashier?: boolean;\r\n  isWaiter?: boolean;\r\n  isKitchenUser?: boolean;\r\n  isHomeDeliveryUser?: boolean;\r\n  password?: number;\r\n}\r\n\r\nexport interface LoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n","import { FormatedCountry } from './countries';\r\nimport { Category, Product } from './product';\r\nimport { TableSection } from './table';\r\nimport { Tax } from './taxes';\r\n\r\nexport interface Organisation {\r\n  id: number;\r\n  name: string;\r\n  secondaryLanguageName?: string;\r\n  caption: string;\r\n  type?: string[];\r\n  address: string;\r\n  coord?: string[];\r\n  license?: string;\r\n  openAllWeek?: boolean;\r\n  offDays?: string[];\r\n  products?: Product[];\r\n  categories?: Category[];\r\n  tableSections?: TableSection[];\r\n  isRegistrationComplete?: boolean;\r\n  taxes?: Tax[];\r\n  customerShortcuts?: string[];\r\n  productShortcuts?: string[];\r\n  currencyCode?: string;\r\n  country?: FormatedCountry;\r\n  decimalZeros?: number;\r\n  printer?: string;\r\n  password?: string;\r\n}\r\n\r\nexport enum CompanyShortcutTypes {\r\n  PRODUCTSHORTCUTS = 'productshortctus',\r\n  CUSTOMERSHORTCUTS = 'customershortcuts',\r\n}\r\n","export interface Tax {\r\n  name: string;\r\n  value: number;\r\n  isPercentage: boolean;\r\n  printName: string;\r\n  id?: number;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface AppliedTaxInfo {\r\n  taxName: string;\r\n  value: number;\r\n}\r\n","// import { CartItem } from './cart';\r\nimport { Modifier, Product } from './product';\r\nimport { Customer } from './table';\r\nimport { AppliedTaxInfo } from './taxes';\r\nimport { User } from './user';\r\nexport interface OrderItem {\r\n  count: number;\r\n  modifiers?: Modifier[];\r\n  id?: number; //this is just for mapping the database id to orderitem\r\n  status: OrderItemStatus;\r\n  name?: string;\r\n  kitchenUser?: User;\r\n  key?: string;\r\n  totalCountOfSameItem?: number;\r\n  orderId?: string; //just to track what order it belongs.\r\n  orderNumber?: number; // to track the order number\r\n  orderItemType?: OrderItemType;\r\n  amount?: number;\r\n  customeKey?: string;\r\n  product?: Product;\r\n}\r\n\r\nexport interface OrderSummary {\r\n  id: number;\r\n  orderNumber?: number;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n  orderStatus: OrderStatus | string;\r\n  paymentStatus?: PaymentStatus;\r\n  orderItems?: OrderItem[];\r\n\r\n  createdBy?: User;\r\n  createdFor?: User;\r\n  orderType?: string;\r\n  customerName?: string | null;\r\n  customer?: Customer;\r\n  totalItemsCount?: number;\r\n  totalQuantityCount?: number;\r\n  appliedTaxes?: AppliedTaxInfo[];\r\n  totalAmount?: number;\r\n  taxedTotal?: number;\r\n  customerId?: number;\r\n  tableId?: number;\r\n  createdUserId?: number;\r\n  user?: User; // [NOTE] optional field to fetch created user.now schema is named user that is why the name user, change it to createdUser in prisma schema later on\r\n  deliveryUserId?: number;\r\n  kot?: any[];\r\n}\r\n\r\n// export interface AppliedTax {\r\n//   name: string;\r\n//   taxValue: number;\r\n// }\r\n\r\nexport enum OrderType {\r\n  TABLE = 'table',\r\n  TAKEAWAY = 'takeaway',\r\n  HOMEDELIVERY = 'homedelivery',\r\n}\r\n\r\nexport enum OrderItemStatus {\r\n  READY = 'ready',\r\n  INPROGRESS = 'inprogress',\r\n  WAITING = 'waiting',\r\n}\r\n\r\nexport enum OrderStatus {\r\n  PLACED = 'placed',\r\n  INPROGRESS = 'inprogress',\r\n  READY = 'ready',\r\n  SERVED = 'served',\r\n  DELIVERED = 'delivered',\r\n  PAID = 'paid',\r\n  CANCELLED = 'cancelled',\r\n}\r\n\r\nexport enum OrderItemType {\r\n  NEW = 'new',\r\n  RUNNING = 'running',\r\n}\r\n\r\nexport enum PaymentStatus {\r\n  PAID = 'paid',\r\n  NOTPAID = 'notpaid',\r\n  CREDIT = 'credit',\r\n}\r\n\r\nexport interface OrderStat {\r\n  count: number;\r\n  sum: number;\r\n  paystat: PaymentStatus;\r\n}\r\n\r\nexport interface StaffStat {\r\n  name: string;\r\n  id: number;\r\n  orderCount: number;\r\n}\r\n\r\nexport interface OrderItemEdit {\r\n  orderItem: OrderItem;\r\n  count: number;\r\n}\r\n\r\nexport interface PaymentDetails {\r\n  paidAmount: number;\r\n  discount: number;\r\n  balance: number;\r\n  mode: string;\r\n}\r\n","import { OrderSummary } from './order';\r\n\r\nexport interface Table {\r\n  id: number;\r\n  name?: string;\r\n  capacity?: number;\r\n  password?: number;\r\n  isOccupied?: boolean;\r\n  tableSectionId?: string;\r\n  customers?: Customer[];\r\n  floorId?: number;\r\n  floor?: any;\r\n  orders?: OrderSummary[];\r\n}\r\n\r\nexport interface Floor {\r\n  id: number;\r\n  name: string;\r\n  tables?: Table[];\r\n}\r\n\r\nexport interface TableSection {\r\n  _id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Customer {\r\n  firstName: string;\r\n  lastName: string;\r\n  id: number;\r\n  type?: string;\r\n}\r\n","export interface FormatedCountry {\r\n  name: string;\r\n  currency: string;\r\n  countryCode: string;\r\n  isdCode: string;\r\n}\r\n","import { Product, Variant } from './product';\r\n\r\nexport interface CountSelectionDialogData {\r\n  product: Product;\r\n  selectedVariant?: Variant;\r\n}\r\n","import { Product } from './product';\r\n\r\nexport interface ModifierSelectionDialogData {\r\n  product: Product;\r\n}\r\n","import { Organisation } from './organisation';\r\n\r\nexport interface CompanyEditDialogData {\r\n  company: Organisation;\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface PosSession {\r\n  id: number;\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  status: SessionStatus;\r\n  createdBy?: User;\r\n}\r\n\r\nexport enum SessionStatus {\r\n  ACTIVE = 'active',\r\n  CLOSE = 'closed',\r\n}\r\n","export interface PrinterDetail {\r\n  name: string;\r\n  printer: string;\r\n}\r\n","import { OrderType } from './order';\r\n\r\nexport interface Kitchen {\r\n  id?: number;\r\n  name: string;\r\n  printer: string;\r\n  shouldPrintKot: boolean;\r\n}\r\n\r\nexport enum KotStatus {\r\n  INPROGRESS = 'inprogress',\r\n  READY = 'ready',\r\n}\r\n\r\nexport interface Kot {\r\n  kotid: number;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  createdUserName: string;\r\n  createdUserId: number;\r\n  kitchenId: number;\r\n  status: KotStatus;\r\n  orderId: number;\r\n  orderNumber: number;\r\n  orderType: OrderType;\r\n\r\n  isNew?: boolean;\r\n  kotItems: KotItem[];\r\n}\r\n\r\nexport interface KotItem {\r\n  name: string;\r\n  amount: number;\r\n  message: string;\r\n  orderItemType: string;\r\n  customeKey: string;\r\n  count: number;\r\n}\r\n","import { Kitchen } from './kitchen';\r\n\r\nexport interface KitchenEditDialogData {\r\n  kitchen: Kitchen;\r\n}\r\n","import { Category } from './product';\r\n\r\nexport interface CategoryEditDialogData {\r\n  category: Category;\r\n}\r\n","import { Table } from './table';\r\n\r\nexport interface TableEditDialogData {\r\n  table: Table;\r\n}\r\n","import { Product } from './product';\r\n\r\nexport interface ProductEditDialogData {\r\n  product: Product;\r\n}\r\n","import { Tax } from './taxes';\r\n\r\nexport interface TaxEditDialogData {\r\n  tax: Tax;\r\n}\r\n","import { Floor } from './table';\r\n\r\nexport interface FloorEditDialogData {\r\n  floor: Floor;\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface UserEditDialogData {\r\n  user: User;\r\n}\r\n","import { Variant } from './product';\r\n\r\nexport interface VariantEditDialogData {\r\n  variant: Variant;\r\n  productId: number;\r\n}\r\n","export interface ConfirmDialogData {\r\n  title: string;\r\n  content: string;\r\n  okBtnText: string;\r\n}\r\n","import { Product } from './product';\r\n\r\nexport interface CartItemPriceDialogData {\r\n  key: string;\r\n  price: number;\r\n  product: Product;\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { readFileSync, unlink } from 'fs';\r\nimport { handlebars } from 'hbs';\r\nimport { join, resolve } from 'path';\r\n\r\nimport { Cart } from '@hotel/common/types';\r\nimport { PDFOptions, launch } from 'puppeteer';\r\nimport { kitchen, order, orderItem, user } from '@prisma/client';\r\nimport { PrintService } from './print.service';\r\nimport { dateTimeToDateHHMM } from '@hotel/common/util';\r\n\r\n@Injectable()\r\nexport class PDFService {\r\n  constructor(private printService: PrintService) {}\r\n\r\n  async printReceipt(receiptData: any, printerName: string) {\r\n    const relativePath = resolve(__dirname, 'views');\r\n    console.log('relative path', relativePath);\r\n    console.log(join(relativePath, 'receipt.html'));\r\n    const templateHtml = readFileSync(\r\n      join(relativePath, 'receipt.html'),\r\n      'utf8'\r\n    );\r\n    const template = handlebars.compile(templateHtml);\r\n    const html = template(receiptData);\r\n\r\n    const pdfOptions = this.getPdfOptions('pdf', 'receipt');\r\n    await this.savePdf(html, pdfOptions);\r\n\r\n    await this.printService.printPdfAtPath(pdfOptions.path!, printerName);\r\n    // this.deletePdf(pdfOptions.path!);\r\n    return;\r\n  }\r\n\r\n  async samplebill() {\r\n    const relativePath = resolve(__dirname, 'views');\r\n    const templateHtml = readFileSync(\r\n      join(relativePath, 'receipt copy.html'),\r\n      'utf8'\r\n    );\r\n    const template = handlebars.compile(templateHtml);\r\n    const html = template({});\r\n\r\n    const pdfOptions = this.getPdfOptions('pdf', 'receipt');\r\n    await this.savePdf(html, pdfOptions);\r\n    // await this.printService.printPdfAtPath(pdfOptions.path!, 'CP-Q2');\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  async printKot(kotData: any) {\r\n    const html = this.createKotHtml('KOT.html', kotData);\r\n    const pdfOptions = this.getPdfOptions('pdf', 'kot');\r\n    await this.savePdf(html, pdfOptions);\r\n    await this.printService.printPdfAtPath(pdfOptions.path!, kotData.printer);\r\n    await this.deletePdf(pdfOptions.path!);\r\n  }\r\n  private createKotHtml(templateName: string, kotData: any) {\r\n    // const relativePath = resolve(__dirname, '../src/views');\r\n    const relativePath = resolve(__dirname, 'views');\r\n    console.log('relative path', relativePath);\r\n    console.log(join(relativePath, templateName));\r\n    const templateHtml = readFileSync(join(relativePath, templateName), 'utf8');\r\n    const template = handlebars.compile(templateHtml);\r\n    const html = template(kotData);\r\n    return html;\r\n  }\r\n\r\n  private getPdfOptions(folderName: string, name: string) {\r\n    const miliss = new Date();\r\n\r\n    const milis = miliss.getTime();\r\n    // [TODO]: for pkg to work need to replace _dirname with  path.dirname(process.execPath),\r\n    const relativePath = resolve(__dirname, '../../../../pdf');\r\n    // const pdfPath = join('pdf', `${name}-${milis}.pdf`);\r\n    const pdfPath = join(relativePath, `${name}-${milis}.pdf`);\r\n    console.log('pdf path', pdfPath);\r\n    const options: PDFOptions = {\r\n      width: '270',\r\n      headerTemplate: '<p>header jafar</p>',\r\n      footerTemplate: '<p>footer jafar</p>',\r\n      displayHeaderFooter: true,\r\n      margin: {\r\n        top: '0px',\r\n        bottom: '10px',\r\n      },\r\n      printBackground: false,\r\n      path: pdfPath,\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  private async savePdf(html: any, options: PDFOptions) {\r\n    const browser = await launch({\r\n      args: [\r\n        '--no-sandbox',\r\n        '--disable-features=IsolateOrigins',\r\n        '--disable-site-isolation-trials',\r\n        '--autoplay-policy=user-gesture-required',\r\n        '--disable-background-networking',\r\n        '--disable-background-timer-throttling',\r\n        '--disable-backgrounding-occluded-windows',\r\n        '--disable-breakpad',\r\n        '--disable-client-side-phishing-detection',\r\n        '--disable-component-update',\r\n        '--disable-default-apps',\r\n        '--disable-dev-shm-usage',\r\n        '--disable-domain-reliability',\r\n        '--disable-extensions',\r\n        '--disable-features=AudioServiceOutOfProcess',\r\n        '--disable-hang-monitor',\r\n        '--disable-ipc-flooding-protection',\r\n        '--disable-notifications',\r\n        '--disable-offer-store-unmasked-wallet-cards',\r\n        '--disable-popup-blocking',\r\n        '--disable-print-preview',\r\n        '--disable-prompt-on-repost',\r\n        '--disable-renderer-backgrounding',\r\n        '--disable-setuid-sandbox',\r\n        '--disable-speech-api',\r\n        '--disable-sync',\r\n        '--hide-scrollbars',\r\n        '--ignore-gpu-blacklist',\r\n        '--metrics-recording-only',\r\n        '--mute-audio',\r\n        '--no-default-browser-check',\r\n        '--no-first-run',\r\n        '--no-pings',\r\n        '--no-zygote',\r\n        '--password-store=basic',\r\n        '--use-gl=swiftshader',\r\n        '--use-mock-keychain',\r\n      ],\r\n      headless: 'new',\r\n    });\r\n\r\n    const page = await browser.newPage();\r\n\r\n    // await page.goto(`data:text/html;charset=UTF-8,${html}`, {\r\n    //   waitUntil: 'networkidle0',\r\n    // });\r\n    await page.setContent(html, {\r\n      waitUntil: ['domcontentloaded', 'load', 'networkidle0'],\r\n    });\r\n    const height = await page.evaluate(\r\n      () => document.documentElement.offsetHeight\r\n    );\r\n    // console.log('page goto method..', await page.content());\r\n    // height auto was the right fix for the page cut of pdf\r\n    // generated for longer bill.\r\n    // printbackground true option is for getting div background printed\r\n    const extrapaddedHeight = height + 100;\r\n    await page.pdf({\r\n      ...options,\r\n      height: extrapaddedHeight + 'px',\r\n      printBackground: true,\r\n    });\r\n    await browser.close();\r\n  }\r\n\r\n  private async deletePdf(path: string) {\r\n    unlink(path, () => {\r\n      console.log('file has been delete from : ', path);\r\n    });\r\n  }\r\n}\r\n","module.exports = require(\"fs\");","module.exports = require(\"hbs\");","module.exports = require(\"path\");","module.exports = require(\"puppeteer\");","import { Injectable } from '@nestjs/common';\r\nimport { resolve } from 'path';\r\n\r\nimport { print } from 'pdf-to-printer';\r\n\r\n@Injectable()\r\nexport class PrintService {\r\n  async printPdfAtPath(path: string, printerName: string) {\r\n    try {\r\n      // awaiting printer will make the progress stop\r\n      // until printer comes back online in the case of printer being offline.\r\n      // to give enough time to read the pdf before it gets deleted.. adding an artifical delay\r\n\r\n      const result = await this.printDoc(\r\n        print(resolve(__dirname, path), {\r\n          printer: printerName, //'CP-Q2',\r\n          scale: 'noscale',\r\n        }),\r\n        3000\r\n      );\r\n      // await print(resolve(__dirname, path), {\r\n      //   printer: printerName, //'CP-Q2',\r\n      // });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async printDoc(asyncPromise: Promise<any>, timeLimit: number) {\r\n    let timeoutHandle: any;\r\n\r\n    const timeoutPromise = new Promise((_resolve, reject) => {\r\n      timeoutHandle = setTimeout(\r\n        () => reject(new Error('Async call timeout limit reached')),\r\n        timeLimit\r\n      );\r\n    });\r\n\r\n    return Promise.race([asyncPromise, timeoutPromise]).then((result) => {\r\n      clearTimeout(timeoutHandle);\r\n      return result;\r\n    });\r\n  }\r\n}\r\n","module.exports = require(\"pdf-to-printer\");","export * from './lib/api-feature-company.controller';\r\nexport * from './lib/api-feature-company.module';\r\n","import { Body, Controller, Get, Patch, Post, Query } from '@nestjs/common';\r\nimport { CompanyService } from './company.service';\r\nimport {\r\n  UpdateCompanyDto,\r\n  UpdateProdcutShortcutsDto,\r\n} from './dto/company.update.dto';\r\nimport { CompanyShortcutTypes } from '@hotel/common/types';\r\n\r\n@Controller('company')\r\nexport class ApiFeatureCompanyController {\r\n  constructor(private companyService: CompanyService) {}\r\n  @Get()\r\n  getCompanyDetails() {\r\n    console.log('jafar get copamy ');\r\n    return this.companyService.getCompanyDetails(1);\r\n  }\r\n\r\n  @Post()\r\n  updateCompany(@Body() companyUpdateDto: UpdateCompanyDto) {\r\n    return this.companyService.updateCompany(companyUpdateDto);\r\n  }\r\n\r\n  @Get('printers')\r\n  getConnectedPrinters() {\r\n    return this.companyService.getPrinters();\r\n  }\r\n\r\n  @Patch()\r\n  updateProductShortcuts(\r\n    @Body() updateProductShortcuts: UpdateProdcutShortcutsDto,\r\n    @Query() data: any\r\n  ) {\r\n    console.log('query data', data);\r\n    const shortcutType = data.shortcutName;\r\n    if (\r\n      shortcutType == CompanyShortcutTypes.CUSTOMERSHORTCUTS ||\r\n      shortcutType == CompanyShortcutTypes.PRODUCTSHORTCUTS\r\n    ) {\r\n      return this.companyService.updateProductShortcuts(\r\n        updateProductShortcuts,\r\n        shortcutType\r\n      );\r\n    }\r\n    throw Error('Query data does not match shortcut name');\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { Injectable } from '@nestjs/common';\r\nimport {\r\n  UpdateCompanyDto,\r\n  UpdateProdcutShortcutsDto,\r\n} from './dto/company.update.dto';\r\nimport { getPrinters, print } from 'pdf-to-printer';\r\nimport { CompanyShortcutTypes } from '@hotel/common/types';\r\n\r\n@Injectable()\r\nexport class CompanyService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getCompanyDetails(id: number) {\r\n    return await this.prismaService.company.findFirst({\r\n      include: {\r\n        taxes: true,\r\n      },\r\n    });\r\n  }\r\n\r\n  async updateCompany(updateCompanyDto: UpdateCompanyDto) {\r\n    console.log(updateCompanyDto);\r\n    return await this.prismaService.company.update({\r\n      where: { id: updateCompanyDto.id },\r\n      data: {\r\n        ...updateCompanyDto,\r\n        lastOrderNumber: +updateCompanyDto.lastOrderNumber,\r\n        decimalZeros: +updateCompanyDto.decimalZeros,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getPrinters() {\r\n    try {\r\n      const printers = await getPrinters();\r\n      // console.log(printers);\r\n      const mappedArr = printers.map((item) => ({\r\n        name: item.name,\r\n        printer: item.name,\r\n      }));\r\n      return mappedArr;\r\n    } catch (error) {\r\n      console.log('exception while getting priters list');\r\n      console.log(error);\r\n      throw new Error('Error on Getting installed printers');\r\n    }\r\n  }\r\n\r\n  async updateProductShortcuts(\r\n    updateProductShorcutdto: UpdateProdcutShortcutsDto,\r\n    shortcutType: string\r\n  ) {\r\n    try {\r\n      const company = await this.prismaService.company.update({\r\n        where: { id: updateProductShorcutdto.id },\r\n        data: {\r\n          ...(shortcutType == CompanyShortcutTypes.PRODUCTSHORTCUTS && {\r\n            productShortcuts: updateProductShorcutdto.shortcuts,\r\n          }),\r\n          ...(shortcutType == CompanyShortcutTypes.CUSTOMERSHORTCUTS && {\r\n            customerShortcuts: updateProductShorcutdto.shortcuts,\r\n          }),\r\n        },\r\n      });\r\n\r\n      return company.productShortcuts;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error('failed to update products shortcuts');\r\n    }\r\n  }\r\n}\r\n","export class UpdateCompanyDto {\r\n  id!: number;\r\n  name!: string;\r\n  secondaryLanguageName!: string;\r\n  logoUrl!: string;\r\n  lastOrderNumber!: number;\r\n  caption!: string;\r\n  footer!: string;\r\n  currencyCode!: string;\r\n  address!: string;\r\n  decimalZeros!: number;\r\n  printer!: string;\r\n}\r\n\r\nexport class UpdateProdcutShortcutsDto {\r\n  id!: number;\r\n  shortcuts!: string[];\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { ApiFeatureCompanyController } from './api-feature-company.controller';\r\nimport { CompanyService } from './company.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule],\r\n  controllers: [ApiFeatureCompanyController],\r\n  providers: [CompanyService],\r\n  exports: [],\r\n})\r\nexport class ApiFeatureCompanyModule {}\r\n","export * from './lib/api-feature-table.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { TableController } from './table.controller';\r\nimport { TableService } from './table.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule],\r\n  controllers: [TableController],\r\n  providers: [TableService],\r\n  exports: [],\r\n})\r\nexport class ApiFeatureTableModule {}\r\n","import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { TableService } from './table.service';\r\nimport { CreateTableDto } from './dto/create-table.dto';\r\n\r\n@Controller('table')\r\nexport class TableController {\r\n  constructor(private tableService: TableService) {}\r\n  @Get()\r\n  getTables() {\r\n    return this.tableService.getTables();\r\n  }\r\n\r\n  @Post()\r\n  createTable(@Body() params: CreateTableDto) {\r\n    return this.tableService.createTable(params);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateTable(@Body() body: CreateTableDto, @Param('id') id: any) {\r\n    const tableId = +id;\r\n    console.log('table id', tableId);\r\n    return this.tableService.udpateTable(tableId, body);\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { OrderStatus, PaymentStatus } from '@hotel/common/types';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateTableDto } from './dto/create-table.dto';\r\n\r\n@Injectable()\r\nexport class TableService {\r\n  constructor(private prismaService: PrismaService) {}\r\n  async getTables() {\r\n    return await this.prismaService.table.findMany({\r\n      include: {\r\n        tableSeats: true,\r\n        orders: {\r\n          where: {\r\n            orderStatus: { not: OrderStatus.CANCELLED },\r\n            paymentStatus: {\r\n              notIn: [PaymentStatus.CREDIT, PaymentStatus.PAID],\r\n            },\r\n          },\r\n          select: { id: true },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  private formatData(data: CreateTableDto) {\r\n    return {\r\n      name: data.name,\r\n      capacity: +data.capacity,\r\n      floorId: +data.floorId,\r\n    };\r\n  }\r\n\r\n  async createTable(data: CreateTableDto) {\r\n    try {\r\n      return await this.prismaService.table.create({\r\n        data: this.formatData(data),\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n\r\n  async udpateTable(id: number, data: CreateTableDto) {\r\n    try {\r\n      return this.prismaService.table.update({\r\n        where: { id },\r\n        data: this.formatData(data),\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n}\r\n","export class CreateTableDto {\r\n  name!: string;\r\n  capacity!: number;\r\n  floorId!: number;\r\n}\r\n","export * from './lib/api-feature-floor.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { FloorController } from './floor.controller';\r\nimport { FloorService } from './floor.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule],\r\n  controllers: [FloorController],\r\n  providers: [FloorService],\r\n  exports: [],\r\n})\r\nexport class ApiFeatureFloorModule {}\r\n","import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { FloorService } from './floor.service';\r\nimport { CreateFloorDto } from './dto/create-floor.dto';\r\n\r\n@Controller('floor')\r\nexport class FloorController {\r\n  constructor(private floorService: FloorService) {}\r\n\r\n  @Get()\r\n  getFloors() {\r\n    return this.floorService.getFloors();\r\n  }\r\n\r\n  @Get(':id')\r\n  getFloorTables(@Param() params: any) {\r\n    const id = +params.id;\r\n    return this.floorService.getFloorTables(id);\r\n  }\r\n\r\n  @Post()\r\n  createProduct(@Body() params: CreateFloorDto) {\r\n    return this.floorService.createFloor(params);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateProduct(@Body() body: CreateFloorDto, @Param('id') id: any) {\r\n    const floorId = +id;\r\n    console.log('floor id', floorId);\r\n    return this.floorService.editFloor(floorId, body);\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { OrderStatus, PaymentStatus } from '@hotel/common/types';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { CreateFloorDto } from './dto/create-floor.dto';\r\n\r\n@Injectable()\r\nexport class FloorService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getFloors() {\r\n    return await this.prismaService.floor.findMany();\r\n  }\r\n\r\n  async getFloorTables(floorId: number) {\r\n    return await this.prismaService.floor.findFirst({\r\n      where: { id: floorId },\r\n      select: {\r\n        id: true,\r\n        tables: {\r\n          include: {\r\n            orders: {\r\n              where: {\r\n                AND: [\r\n                  {\r\n                    orderStatus: {\r\n                      notIn: [OrderStatus.SERVED, OrderStatus.CANCELLED],\r\n                    },\r\n                  },\r\n                  { paymentStatus: PaymentStatus.NOTPAID },\r\n                ],\r\n              },\r\n              include: {\r\n                customer: true,\r\n              },\r\n            },\r\n          },\r\n          orderBy: { name: 'asc' },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async createFloor(floor: CreateFloorDto) {\r\n    try {\r\n      return await this.prismaService.floor.create({\r\n        data: {\r\n          name: floor.name,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new Error('unable to create floor');\r\n    }\r\n  }\r\n\r\n  async editFloor(id: number, floor: CreateFloorDto) {\r\n    try {\r\n      return await this.prismaService.floor.update({\r\n        where: { id },\r\n        data: {\r\n          name: floor.name,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new Error('floor update failed');\r\n    }\r\n  }\r\n}\r\n","export class CreateFloorDto {\r\n  name!: string;\r\n}\r\n","module.exports = require(\"@nestjs/serve-static\");","export * from './lib/api-feature-pos-session.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { PosSessionController } from './pos-session.controller';\r\nimport { PosSessionService } from './session.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\nimport { ApiFeatureAuthModule } from '@hotel/api/feature-auth';\r\nimport { ApiFeatureStatModule } from '@hotel/api/feature-stat';\r\nimport { ApiCommonModule } from '@hotel/api/common';\r\nimport { SessionReportService } from './report.service';\r\n\r\n@Module({\r\n  controllers: [PosSessionController],\r\n  imports: [\r\n    ApiDataAccessDbModule,\r\n    ApiFeatureAuthModule,\r\n    ApiFeatureStatModule,\r\n    ApiCommonModule,\r\n  ],\r\n  providers: [PosSessionService, SessionReportService],\r\n  exports: [],\r\n})\r\nexport class ApiFeaturePosSessionModule {}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  Param,\r\n  Patch,\r\n  Post,\r\n  Put,\r\n  Req,\r\n  UseGuards,\r\n  Response,\r\n  StreamableFile,\r\n} from '@nestjs/common';\r\nimport { PosSessionService } from './session.service';\r\nimport { User, UserType } from '@hotel/common/types';\r\nimport { JwtAuthGuard } from '@hotel/api/feature-auth';\r\nimport { SessionReportService } from './report.service';\r\n\r\n@Controller('session')\r\nexport class PosSessionController {\r\n  constructor(\r\n    private sessionService: PosSessionService,\r\n    private sessionReportService: SessionReportService\r\n  ) {}\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get()\r\n  getSessionsOfTheDay(@Req() req: any) {\r\n    console.log('recent orders');\r\n    const user = req.user;\r\n    return this.sessionService.getSessions();\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Post()\r\n  startAnewSession(@Req() req: any, @Body() data: any) {\r\n    console.log('recent orders');\r\n    const user = req.user;\r\n    const intialAmount = data.cash ? data.cash : 0;\r\n    return this.sessionService.createSession(user, intialAmount);\r\n    return 'starting new session';\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Put(':id')\r\n  async endActiveSession(\r\n    @Param() params: any,\r\n    @Req() req: any\r\n\r\n    // @Response({ passthrough: true }) res: any\r\n  ) {\r\n    console.log('recent orders');\r\n    const user = req.user;\r\n    const sessionId = +params.id;\r\n    const closedSession = await this.sessionService.closeSession(sessionId);\r\n\r\n    return closedSession;\r\n    // const result = await this.sessionReportService.downloadSessionReport(\r\n    //   sessionId\r\n    // );\r\n    // res.set({\r\n    //   'Content-Type': 'application/pdf',\r\n    //   'Content-Disposition': `attachment; filename=\"${result!.reportName}.pdf`,\r\n    // });\r\n    // return new StreamableFile(result!.pdfStream);\r\n  }\r\n\r\n  // @UseGuards(JwtAuthGuard)\r\n  @Get('session/:id')\r\n  async downloadSessionReport(\r\n    @Req() req: any,\r\n    @Param('id') Id: string,\r\n    @Response({ passthrough: true }) res: any\r\n  ) {\r\n    const sessionId = +Id;\r\n    // const user = req.user;se\r\n\r\n    const result = await this.sessionReportService.downloadSessionReport(\r\n      sessionId\r\n    );\r\n\r\n    res.set({\r\n      'Content-Type': 'application/pdf',\r\n      'Content-Disposition': `attachment; filename=\"${result?.reportName}.pdf`,\r\n    });\r\n    return new StreamableFile(result!.pdfStream);\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport {\r\n  OrderStatus,\r\n  PaymentStatus,\r\n  SessionStatus,\r\n  User,\r\n} from '@hotel/common/types';\r\nimport { getStartOfTheDay } from '@hotel/common/util';\r\nimport {\r\n  Injectable,\r\n  InternalServerErrorException,\r\n  NotFoundException,\r\n} from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class PosSessionService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async createSession(appUser: User, initialCash: number) {\r\n    try {\r\n      // check if there  is any active session.\r\n      const activesession = await this.prismaService.posSession.findFirst({\r\n        where: {\r\n          status: SessionStatus.ACTIVE,\r\n        },\r\n      });\r\n      // if yes do not create one..\r\n      if (activesession) return;\r\n      // if no start a new one.\r\n\r\n      await this.prismaService.posSession.create({\r\n        data: {\r\n          status: SessionStatus.ACTIVE,\r\n          createdUserId: appUser.id!,\r\n          initialCash: initialCash,\r\n        },\r\n      });\r\n      // return all the sessions of the day.\r\n      return this.getSessions();\r\n    } catch (error) {\r\n      console.log('error occured during creation of session');\r\n      return new Error();\r\n    }\r\n  }\r\n  async getSessions() {\r\n    // console.log('start of the day', getStartOfTheDay());\r\n    // chek any other open, close it forcefully.\r\n    const sessions = await this.prismaService.posSession.findMany({\r\n      where: {\r\n        OR: [\r\n          {\r\n            status: SessionStatus.ACTIVE,\r\n          },\r\n          {\r\n            startTime: { gte: getStartOfTheDay() },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n\r\n    return sessions;\r\n  }\r\n  async closeSession(sessionId: number) {\r\n    // make sure all the sessions are closed.\r\n    // check for non settled orders before close it.\r\n    const activeSession = await this.prismaService.posSession.findUnique({\r\n      where: { id: sessionId },\r\n    });\r\n\r\n    if (!activeSession) throw new NotFoundException('No active session');\r\n    const activeSessionStartTime = activeSession.startTime;\r\n\r\n    const nonPaidOrders = await this.prismaService.order.findMany({\r\n      where: {\r\n        paymentStatus: { notIn: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n        orderStatus: { not: OrderStatus.CANCELLED },\r\n        createdAt: { gte: activeSessionStartTime },\r\n      },\r\n    });\r\n\r\n    console.log('not paid users', nonPaidOrders.length);\r\n\r\n    if (nonPaidOrders.length) {\r\n      console.log('hs gone inside');\r\n      throw new InternalServerErrorException({\r\n        message: `There are ${nonPaidOrders.length} orders which are not settled yet.`,\r\n      });\r\n    }\r\n    // generate report and get it downloaded at the client.\r\n\r\n    const closedSession = await this.prismaService.posSession.update({\r\n      where: { id: sessionId },\r\n      data: { status: SessionStatus.CLOSE, endTime: new Date() },\r\n    });\r\n\r\n    // console.log('cosed sessino ', closedSession);\r\n    // // get orders from closed session start time..\r\n\r\n    // const totalsOrders = await this.prismaService.order.findMany({\r\n    //   where: { createdAt: { gte: closedSession.startTime } },\r\n    // });\r\n\r\n    return closedSession;\r\n  }\r\n}\r\n","import { PuppeteerService } from '@hotel/api/common';\r\nimport { PrismaService } from '@hotel/api/data-access-db';\r\nimport { StatsService } from '@hotel/api/feature-stat';\r\nimport { PaymentStatus } from '@hotel/common/types';\r\nimport {\r\n  dateTimeToDateHHMM,\r\n  getAppliedTaxesAndTaxesTotal,\r\n  getOnlyCurrentDateWithoutTime,\r\n} from '@hotel/common/util';\r\nimport {\r\n  BadGatewayException,\r\n  Injectable,\r\n  NotFoundException,\r\n} from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class SessionReportService {\r\n  constructor(\r\n    private prismaService: PrismaService,\r\n    private statService: StatsService,\r\n    private pupeteerService: PuppeteerService\r\n  ) {}\r\n  async downloadSessionReport(sessionId: number) {\r\n    try {\r\n      // get the start and end date of the session Id.\r\n      const session = await this.getSessionDetails(sessionId);\r\n\r\n      // get company taxes.\r\n      const company = await this.prismaService.company.findFirst({\r\n        include: { taxes: true },\r\n      });\r\n\r\n      if (!company)\r\n        throw new NotFoundException({}, 'Company Data Could not be read.');\r\n\r\n      const taxes = company.taxes;\r\n      console.log('creating pdf for the session status of ', sessionId);\r\n      if (!session)\r\n        throw new NotFoundException({}, 'No Session with the given ID');\r\n      const startTime = session.startTime;\r\n      const endTime = session.endTime!;\r\n      const initialCash = session.initialCash;\r\n\r\n      const reportSummary = await this.statService.getReportStatsForThePeriod(\r\n        startTime,\r\n        endTime\r\n      );\r\n\r\n      const prductSummary = await this.statService.getProductStatsForThePeriod(\r\n        startTime,\r\n        endTime\r\n      );\r\n\r\n      const staffCountSummary =\r\n        await this.statService.getStaffCountStatsForThePeriod(\r\n          startTime,\r\n          endTime\r\n        );\r\n\r\n      const staffAmoutSummary =\r\n        await this.statService.getStaffAmountStatsForThePeriod(\r\n          startTime,\r\n          endTime\r\n        );\r\n\r\n      // console.log('statff amount, ', staffAmoutSummary);\r\n\r\n      const homeDeliveryCountSummary =\r\n        await this.statService.getHomeDeliveryStatCountViceForThePeriod(\r\n          startTime,\r\n          endTime\r\n        );\r\n\r\n      // console.log('home delivery count', homeDeliveryCountSummary);\r\n\r\n      const homeDeliveryAmoutSummary =\r\n        await this.statService.getHomeDeliveryStatAmountViceForThePeriod(\r\n          startTime,\r\n          endTime\r\n        );\r\n      // console.log('homedevliery amount', homeDeliveryAmoutSummary);\r\n      const formattedStartTime = dateTimeToDateHHMM(startTime);\r\n      const formattedEndTime = dateTimeToDateHHMM(endTime);\r\n      const currentDayOnlyDate = getOnlyCurrentDateWithoutTime();\r\n      // console.log('product summary', prductSummary);\r\n      const noOfDecimalPlaces = company?.decimalZeros\r\n        ? company.decimalZeros\r\n        : 3;\r\n      const { ordersStatArr, totalOrderDetail, totalCashSale } =\r\n        this.formatOrderStatV2(reportSummary, noOfDecimalPlaces);\r\n      const { taxesApplied, taxedTotal } = getAppliedTaxesAndTaxesTotal(\r\n        totalCashSale,\r\n        taxes\r\n      );\r\n      const totalTaxCollected = taxedTotal - totalCashSale;\r\n\r\n      const htmlInputData: any = {\r\n        date: currentDayOnlyDate,\r\n        startTime: formattedStartTime,\r\n        endTime: formattedEndTime,\r\n        initialCash: initialCash.toFixed(noOfDecimalPlaces),\r\n        totalCashSale: totalCashSale.toFixed(noOfDecimalPlaces),\r\n        totalCashInDrawer: (initialCash + taxedTotal).toFixed(\r\n          noOfDecimalPlaces\r\n        ),\r\n        productStatArr: prductSummary,\r\n        ordersStatArr,\r\n        totalOrderDetail,\r\n        totalTaxCollected: totalTaxCollected.toFixed(noOfDecimalPlaces),\r\n        stafCountStatArr: staffCountSummary.length ? staffCountSummary : [],\r\n        stafAmoutStatArr: staffAmoutSummary.length ? staffAmoutSummary : [],\r\n        homeDeliveryCountStatArr: homeDeliveryCountSummary.length\r\n          ? homeDeliveryCountSummary\r\n          : [],\r\n        homeDeliveryAmoutStatArr: homeDeliveryAmoutSummary.length\r\n          ? homeDeliveryAmoutSummary\r\n          : [],\r\n      };\r\n      const pdfStream: Buffer = await this.pupeteerService.getReportPdfStream(\r\n        'sessionSummary',\r\n        'views',\r\n        'pdf',\r\n        'sessionEndsummary.report.html',\r\n        htmlInputData\r\n      );\r\n      return {\r\n        pdfStream,\r\n        reportName: `session report - ${startTime} -- ${endTime}`,\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadGatewayException({ error });\r\n    }\r\n  }\r\n\r\n  async getSessionDetails(sessionId: number) {\r\n    return await this.prismaService.posSession.findUnique({\r\n      where: { id: sessionId },\r\n    });\r\n  }\r\n\r\n  private formatOrderStat(orderStat: any[], noOfDecimalPlaces: number) {\r\n    let totalOrders = 0;\r\n    let totalOrderSum = 0;\r\n    let totalCashSale = 0;\r\n    const mappedOrders = orderStat.map((item) => {\r\n      let description = '';\r\n      switch (item.paystat) {\r\n        case PaymentStatus.CREDIT:\r\n          description = 'Credit Orders';\r\n          break;\r\n        case PaymentStatus.PAID:\r\n          description = 'Paid Orders';\r\n          totalCashSale = totalCashSale + item.sum;\r\n          break;\r\n        case PaymentStatus.NOTPAID:\r\n          description = 'Non Settled Orders';\r\n          break;\r\n        default:\r\n          console.log(item.paystat);\r\n          break;\r\n      }\r\n      totalOrders = totalOrders + item.count;\r\n      totalOrderSum = totalOrderSum + item.sum;\r\n      return {\r\n        description: description,\r\n        count: item.count,\r\n        sum: item.sum.toFixed(noOfDecimalPlaces),\r\n      };\r\n    });\r\n\r\n    const totalOrderDetail = {\r\n      description: 'Total Orders',\r\n      count: totalOrders,\r\n      totalOrderSum: totalOrderSum.toFixed(noOfDecimalPlaces),\r\n    };\r\n\r\n    return { ordersStatArr: mappedOrders, totalOrderDetail, totalCashSale };\r\n  }\r\n\r\n  private formatOrderStatV2(orderStat: any[], noOfDecimalPlaces: number) {\r\n    let totalOrders = 0;\r\n    let totalOrderSum = 0;\r\n    let totalCashSale = 0;\r\n    let totalDiscount = 0;\r\n    const mappedOrders = orderStat.map((item) => {\r\n      console.log('discount of the current', item.discount);\r\n      totalDiscount = totalDiscount + Number.parseFloat(item.discount);\r\n      totalOrderSum = totalOrderSum + item.sum;\r\n      totalOrders = totalOrders + item.count;\r\n      if (item.paystat == 'cash') {\r\n        totalCashSale = totalCashSale + item.sum;\r\n      }\r\n      return {\r\n        description: item.paystat,\r\n        count: item.count,\r\n        sum: item.sum.toFixed(noOfDecimalPlaces),\r\n        discount: item.discount,\r\n      };\r\n    });\r\n    console.log('total discount', totalDiscount);\r\n    const totalOrderDetail = {\r\n      description: 'Total Orders',\r\n      count: totalOrders,\r\n      totalOrderSum: totalOrderSum.toFixed(noOfDecimalPlaces),\r\n      totalDiscount: totalDiscount.toFixed(noOfDecimalPlaces),\r\n    };\r\n\r\n    console.log('total order details', totalOrderDetail);\r\n    console.log('mapped array', mappedOrders);\r\n    return { ordersStatArr: mappedOrders, totalOrderDetail, totalCashSale };\r\n  }\r\n}\r\n","export * from './lib/api-common.module';\nexport * from './lib/puppeteer.service';\n","import { Module } from '@nestjs/common';\nimport { PuppeteerService } from './puppeteer.service';\n\n@Module({\n  controllers: [],\n  providers: [PuppeteerService],\n  exports: [PuppeteerService],\n})\nexport class ApiCommonModule {}\n","import { readFileSync, unlink } from 'fs';\r\nimport { join, resolve } from 'path';\r\nimport { Browser, PDFOptions, Page, launch } from 'puppeteer';\r\n\r\nimport { handlebars } from 'hbs';\r\nimport {\r\n  createBrowser,\r\n  createHtmlDoc,\r\n  getPaddedDocHeight,\r\n  getPdfOptionsForReciept,\r\n  setupHtmlPage,\r\n} from './puppeteer.util';\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class PuppeteerService {\r\n  async getReportPdfStream(\r\n    reportName: string,\r\n    templatefolderName: string,\r\n    outputFolderName: string,\r\n    htmlName: string,\r\n    inputData: any\r\n  ) {\r\n    // setup the html page.\r\n    const html = createHtmlDoc(htmlName, inputData, templatefolderName);\r\n    // setup pdf options.\r\n    const pdfOptions = getPdfOptionsForReciept(outputFolderName, reportName);\r\n    return this.getPdfStream(html, pdfOptions);\r\n  }\r\n\r\n  private async getPdfStream(html: any, options: PDFOptions) {\r\n    const browser = await createBrowser();\r\n\r\n    const page = await setupHtmlPage(html, browser);\r\n    const extrapaddedHeight = await getPaddedDocHeight(100, page);\r\n    // to get only the buffer delete path from the pdfoptions\\\r\n    const udpatedPdfOptions = {\r\n      ...options,\r\n      height: extrapaddedHeight + 'px',\r\n      printBackground: true,\r\n    };\r\n    delete udpatedPdfOptions['path'];\r\n    const pdfBuffer = await page.pdf(udpatedPdfOptions);\r\n    await browser.close();\r\n    return pdfBuffer;\r\n  }\r\n\r\n  private async savePdf(html: any, options: PDFOptions) {\r\n    const browser = await createBrowser();\r\n\r\n    const page = await setupHtmlPage(html, browser);\r\n    const extrapaddedHeight = getPaddedDocHeight(100, page);\r\n    await page.pdf({ ...options, height: extrapaddedHeight + 'px' });\r\n    await browser.close();\r\n  }\r\n\r\n  getPdfOptions(folderName: string, name: string) {\r\n    return getPdfOptionsForReciept(folderName, name);\r\n  }\r\n}\r\n","import { readFileSync, unlink } from 'fs';\r\nimport { join, resolve } from 'path';\r\nimport { Browser, PDFOptions, Page, launch } from 'puppeteer';\r\n\r\nimport { handlebars } from 'hbs';\r\n\r\nexport const deletePdf = (path: string) => {\r\n  unlink(path, () => {\r\n    console.log('file has been delete from : ', path);\r\n  });\r\n};\r\n\r\nexport const getPdfOptionsForReciept = (folderName: string, name: string) => {\r\n  const pdfPath = createPdfPath(folderName, name);\r\n  const options: PDFOptions = {\r\n    width: '270',\r\n    headerTemplate: '<p>header jafar</p>',\r\n    footerTemplate: '<p>footer jafar</p>',\r\n    displayHeaderFooter: true,\r\n    margin: {\r\n      top: '0px',\r\n      bottom: '10px',\r\n    },\r\n    printBackground: false,\r\n    path: pdfPath,\r\n  };\r\n\r\n  return options;\r\n};\r\n\r\nexport const createPdfPath = (folderName: string, name: string) => {\r\n  const miliss = new Date();\r\n  const folder = folderName ? folderName : 'pdf';\r\n  const milis = miliss.getTime();\r\n  const relativePath = resolve(__dirname, `../../../../${folder}`);\r\n  const pdfPath = join(relativePath, `${name}-${milis}.pdf`);\r\n  return pdfPath;\r\n};\r\n\r\nexport const createHtmlDoc = (\r\n  templateName: string,\r\n  inputData: any,\r\n  templateFolder: string\r\n) => {\r\n  const templateFolderName = templateFolder ? templateFolder : 'views';\r\n  const relativePath = resolve(__dirname, templateFolderName);\r\n  console.log(join(relativePath, templateName));\r\n  const templateHtml = readFileSync(join(relativePath, templateName), 'utf8');\r\n  const template = handlebars.compile(templateHtml);\r\n  if (inputData) return template(inputData);\r\n  return template({});\r\n};\r\n\r\nexport const createBrowser = async () => {\r\n  const browser = await launch({\r\n    args: [\r\n      '--no-sandbox',\r\n      '--disable-features=IsolateOrigins',\r\n      '--disable-site-isolation-trials',\r\n      '--autoplay-policy=user-gesture-required',\r\n      '--disable-background-networking',\r\n      '--disable-background-timer-throttling',\r\n      '--disable-backgrounding-occluded-windows',\r\n      '--disable-breakpad',\r\n      '--disable-client-side-phishing-detection',\r\n      '--disable-component-update',\r\n      '--disable-default-apps',\r\n      '--disable-dev-shm-usage',\r\n      '--disable-domain-reliability',\r\n      '--disable-extensions',\r\n      '--disable-features=AudioServiceOutOfProcess',\r\n      '--disable-hang-monitor',\r\n      '--disable-ipc-flooding-protection',\r\n      '--disable-notifications',\r\n      '--disable-offer-store-unmasked-wallet-cards',\r\n      '--disable-popup-blocking',\r\n      '--disable-print-preview',\r\n      '--disable-prompt-on-repost',\r\n      '--disable-renderer-backgrounding',\r\n      '--disable-setuid-sandbox',\r\n      '--disable-speech-api',\r\n      '--disable-sync',\r\n      '--hide-scrollbars',\r\n      '--ignore-gpu-blacklist',\r\n      '--metrics-recording-only',\r\n      '--mute-audio',\r\n      '--no-default-browser-check',\r\n      '--no-first-run',\r\n      '--no-pings',\r\n      '--no-zygote',\r\n      '--password-store=basic',\r\n      '--use-gl=swiftshader',\r\n      '--use-mock-keychain',\r\n    ],\r\n    headless: 'new',\r\n  });\r\n\r\n  return browser;\r\n};\r\n\r\nexport const setupHtmlPage = async (html: any, browser: Browser) => {\r\n  const page = await browser.newPage();\r\n\r\n  // await page.goto(`data:text/html;charset=UTF-8,${html}`, {\r\n  //   waitUntil: 'networkidle0',\r\n  // });\r\n  await page.setContent(html, {\r\n    waitUntil: ['domcontentloaded', 'load', 'networkidle0'],\r\n  });\r\n\r\n  return page;\r\n};\r\n\r\nexport const getPaddedDocHeight = async (padding: number, page: Page) => {\r\n  const height = await page.evaluate(\r\n    () => document.documentElement.offsetHeight\r\n  );\r\n  // console.log('page goto method..', await page.content());\r\n  // height auto was the right fix for the page cut of pdf\r\n  // generated for longer bill.\r\n  const extrapaddedHeight = height + padding;\r\n  return extrapaddedHeight;\r\n};\r\n","export * from './lib/api-feature-stat.module';\nexport * from './lib/stats.service';\n","import { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\nimport { Module } from '@nestjs/common';\nimport { StatController } from './stats.controller';\nimport { StatsService } from './stats.service';\n\n@Module({\n  imports: [ApiDataAccessDbModule],\n  controllers: [StatController],\n  providers: [StatsService],\n  exports: [StatsService],\n})\nexport class ApiFeatureStatModule {}\n","import {\r\n  Controller,\r\n  Get,\r\n  Query,\r\n  StreamableFile,\r\n  Response,\r\n} from '@nestjs/common';\r\nimport { StatsService } from './stats.service';\r\nimport { DurationDto } from './dto/duration.dto';\r\n\r\n// import {\r\n//   createHtmlDoc,\r\n//   getPdfOptionsForReciept,\r\n//   getPdfStream,\r\n// } from '@hotel/common/util';\r\nimport { createReadStream } from 'fs';\r\nimport { join } from 'path';\r\n\r\n@Controller('stats')\r\nexport class StatController {\r\n  constructor(private statService: StatsService) {}\r\n\r\n  // @Get('')\r\n  // async getStatFile(\r\n  //   @Response({ passthrough: true }) res: any\r\n  // ): Promise<StreamableFile> {\r\n  //   const html = createHtmlDoc('sessionEndsummary.report.html', null, '');\r\n  //   const pdfOptions = getPdfOptionsForReciept('views', 'report');\r\n  //   const file = getPdfStream(html, pdfOptions);\r\n  //   // const file = createReadStream(join(process.cwd(), 'Resume 2023pdf.pdf'));\r\n  //   res.set({\r\n  //     'Content-Type': 'application/pdf',\r\n  //     'Content-Disposition': 'attachment; filename=\"Resume 2023pdf.pdf',\r\n  //   });\r\n  //   return new StreamableFile(file);\r\n  // }\r\n\r\n  @Get('chck')\r\n  getFile(@Response({ passthrough: true }) res: any): StreamableFile {\r\n    const file = createReadStream(join(process.cwd(), 'Resume 2023pdf.pdf'));\r\n    res.set({\r\n      'Content-Type': 'application/pdf',\r\n      'Content-Disposition': 'attachment; filename=\"Resume 2023pdf.pdf',\r\n    });\r\n    return new StreamableFile(file);\r\n  }\r\n\r\n  @Get('dash')\r\n  getDashBaordData() {\r\n    return this.statService.getDashBoardData();\r\n  }\r\n\r\n  @Get('order')\r\n  getOrderStatForDuration(\r\n    @Query('startDate') startDateIso: any,\r\n    @Query('endDate') endDateIso: any\r\n  ) {\r\n    console.log('start date', startDateIso);\r\n    console.log('end date', endDateIso);\r\n    const startDate = new Date(startDateIso.toString());\r\n    const endDate = new Date(endDateIso.toString());\r\n    return this.statService.getReportStatsForThePeriod(startDate, endDate);\r\n  }\r\n\r\n  @Get('product')\r\n  getProductStatsForDuration(\r\n    @Query('startDate') startDateIso: any,\r\n    @Query('endDate') endDateIso: any\r\n  ) {\r\n    console.log('start date', startDateIso);\r\n    console.log('end date', endDateIso);\r\n    const startDate = new Date(startDateIso.toString());\r\n    const endDate = new Date(endDateIso.toString());\r\n    return this.statService.getProductStatsForThePeriod(startDate, endDate);\r\n  }\r\n\r\n  @Get('staffcount')\r\n  getStaffCountStatsForDuration(\r\n    @Query('startDate') startDateIso: any,\r\n    @Query('endDate') endDateIso: any\r\n  ) {\r\n    const startDate = new Date(startDateIso.toString());\r\n    const endDate = new Date(endDateIso.toString());\r\n    return this.statService.getStaffCountStatsForThePeriod(startDate, endDate);\r\n  }\r\n\r\n  @Get('staffamount')\r\n  getStaffAmountStatsForDuration(\r\n    @Query('startDate') startDateIso: any,\r\n    @Query('endDate') endDateIso: any\r\n  ) {\r\n    const startDate = new Date(startDateIso.toString());\r\n    const endDate = new Date(endDateIso.toString());\r\n    return this.statService.getStaffAmountStatsForThePeriod(startDate, endDate);\r\n  }\r\n\r\n  @Get('homedeliverycount')\r\n  getHomeDeliveryCountStatForDuration(\r\n    @Query('startDate') startDateIso: any,\r\n    @Query('endDate') endDateIso: any\r\n  ) {\r\n    const startDate = new Date(startDateIso.toString());\r\n    const endDate = new Date(endDateIso.toString());\r\n    return this.statService.getHomeDeliveryStatCountViceForThePeriod(\r\n      startDate,\r\n      endDate\r\n    );\r\n  }\r\n\r\n  @Get('homedeliveryamount')\r\n  getHomeDeliveryAmountStatForDuration(\r\n    @Query('startDate') startDateIso: any,\r\n    @Query('endDate') endDateIso: any\r\n  ) {\r\n    const startDate = new Date(startDateIso.toString());\r\n    const endDate = new Date(endDateIso.toString());\r\n    return this.statService.getHomeDeliveryStatAmountViceForThePeriod(\r\n      startDate,\r\n      endDate\r\n    );\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { ProductStat, SessionStatus, StaffStat } from '@hotel/common/types';\r\n\r\n@Injectable()\r\nexport class StatsService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getProductStatsForThePeriod(startDateTime: Date, endDateTime: Date) {\r\n    const startTimeISO = startDateTime.toISOString();\r\n    const endTimeISO = endDateTime.toISOString();\r\n    const productStatArr: any[] = await this.prismaService.$queryRaw`\r\n    select foo.\"name\", foo.\"count\" ,  round(foo.\"count\" * 100 /(\r\n\tselect sum(hello.\"count\") from (\r\n\t\tselect subtab.totalCount count, products.name, products.id\r\n      from \r\n\t  (select sum(\"count\") totalCount, \"productId\" from public.\"orderItem\" orderItems\r\n      where orderItems.\"orderId\" IN (select \"id\" from public.\"order\" where \"createdAt\" >=  ${startTimeISO}::timestamp AND \"createdAt\" < ${endTimeISO}::timestamp) \r\n\t   \r\n      group by \"productId\") subtab inner join \r\n      (select * from public.\"product\") products\r\n      ON subtab.\"productId\" = products.id  order by count desc\r\n\t) hello\r\n) , 2) as \"percentage\" from \r\n(\r\n\tselect subtab.totalCount count, products.name, products.id\r\n      from \r\n\t  (select sum(\"count\") totalCount, \"productId\" from public.\"orderItem\" orderItems\r\n      where orderItems.\"orderId\" IN (select \"id\" from public.\"order\" where \"createdAt\" >=  ${startTimeISO}::timestamp  AND \"createdAt\" < ${endTimeISO}::timestamp) \r\n\t   \r\n      group by \"productId\") subtab inner join \r\n      (select * from public.\"product\") products\r\n      ON subtab.\"productId\" = products.id  order by count desc\r\n) foo group by foo.\"name\", foo.\"count\" order by foo.\"count\" desc\r\n    `;\r\n\r\n    // console.log(productStatArr);\r\n\r\n    const formtted: ProductStat[] = (\r\n      productStatArr.map((item) => {\r\n        const totalParsed = JSON.parse(this.toJson(item.count));\r\n        const newTempItem = {\r\n          name: item.name,\r\n          count: totalParsed,\r\n          percentage: item.percentage,\r\n        };\r\n        return newTempItem;\r\n      }) as unknown as ProductStat[]\r\n    ).filter((item) => item.count !== 0); // When there is a deleted item, the count would be zero which is not needed for the report. coz it would display as '0 nos' which doesn't make sense\r\n\r\n    // console.log(formtted);\r\n\r\n    return formtted;\r\n  }\r\n\r\n  async getReportStatsForThePeriod(startDateTime: Date, endDateTime: Date) {\r\n    console.log('start dateTime', startDateTime);\r\n    console.log('end dateTime', endDateTime);\r\n    const startTimeISO = startDateTime.toISOString();\r\n    const endTimeISO = endDateTime.toISOString();\r\n    const orderStatArr: any = await this.prismaService\r\n      .$queryRaw`select sum(tempt.totalAmount), count(tempt.\"orderId\"), orders.\"paystat\" as paystat ,  sum(orders.\"discount\") as discount from \r\n      (select sum(items.count * items.amount) as totalAmount, items.\"orderId\" from public.\"orderItem\" items  group by items.\"orderId\" ) tempt\r\n      inner join\r\n      (select id, \"paymentMode\" as paystat, \"discountApplied\" as discount from public.\"order\" \r\n       where \"createdAt\" >=  ${startTimeISO}::timestamp \r\n       AND \"createdAt\" < ${endTimeISO} :: timestamp AND \"orderStatus\" != 'cancelled') orders \r\n       on orders.id=tempt.\"orderId\" group by paystat\r\n     `;\r\n\r\n    console.log('result is', orderStatArr);\r\n\r\n    const orderStat: any[] = orderStatArr.map((item: any) => {\r\n      return {\r\n        sum: item.sum,\r\n        count: JSON.parse(this.toJson(item.count)),\r\n        paystat: item.paystat,\r\n        discount: item.discount,\r\n      };\r\n    });\r\n\r\n    return orderStat;\r\n    // const ordersTotal: any = await this.prismaService\r\n    //   .$queryRaw`select sum(\"amount\" * \"count\") as totalSale from public.\"orderItem\" where \"orderId\" in (\r\n    //     select id from public.\"order\" where \"createdAt\" >=  ${startDate} AND \"createdAt\" <=${endDate} )\r\n    //     `;\r\n\r\n    // return this.toJson(ordersTotal);\r\n    // console.log('orders count', ordersCount);\r\n    // return { ordersCount, ordersTotal };\r\n  }\r\n\r\n  async getStaffCountStatsForThePeriod(startDateTime: Date, endDateTime: Date) {\r\n    const startTimeISO = startDateTime.toISOString();\r\n    const endTimeISO = endDateTime.toISOString();\r\n\r\n    const staffStatArr: any[] = await this.prismaService.$queryRaw`\r\n    select sectionT.\"totCount\", users.\"name\", users.id from \r\n    (select tempt.totalCount as \"totCount\", tempt.\"createdUserId\" as \"userId\" from \r\n    (select count(id) totalCount,  \"createdUserId\"\r\n    from public.\"order\" orders \r\n    where  \"createdAt\" >= ${startTimeISO}::timestamp  AND \"createdAt\" < ${endTimeISO} :: timestamp\r\n    group by  orders.\"createdUserId\"  ) \r\n    tempt ) sectionT\r\n    inner join (select * from public.\"user\") users\r\n    on users.id = sectionT.\"userId\" order by sectionT.\"totCount\" desc\r\n    `;\r\n\r\n    // const staffStatArr: any[] = await this.prismaService.$queryRaw`\r\n    // select sectionT.\"totCount\", users.\"name\", users.id from\r\n    // (select tempt.totalCount as \"totCount\", tempt.\"createdUserId\" as \"userId\" from\r\n    // (select count(id) totalCount,  \"createdUserId\", \"paymentStatus\"\r\n    // from public.\"order\" orders\r\n    // where  \"createdAt\" >= ${startTimeISO}::timestamp  AND \"createdAt\" < ${endTimeISO} :: timestamp\r\n    // group by  orders.\"paymentStatus\", orders.\"createdUserId\"  )\r\n    // tempt ) sectionT\r\n    // inner join (select * from public.\"user\") users\r\n    // on users.id = sectionT.\"userId\" order by sectionT.\"totCount\" desc\r\n    // `;\r\n\r\n    const staffStat: StaffStat[] = staffStatArr.map((item) => {\r\n      return {\r\n        name: item.name,\r\n        id: item.id,\r\n        orderCount: JSON.parse(this.toJson(item.totCount)),\r\n      };\r\n    });\r\n\r\n    return staffStat;\r\n  }\r\n\r\n  async getStaffAmountStatsForThePeriod(\r\n    startDateTime: Date,\r\n    endDateTime: Date\r\n  ) {\r\n    const startTimeISO = startDateTime.toISOString();\r\n    const endTimeISO = endDateTime.toISOString();\r\n\r\n    const staffStatArr: any[] = await this.prismaService.$queryRaw`\r\n    select joinedTotal.createdUserId as userId, userT.\"name\" as \"name\", joinedTotal.\"multiplied\"::float as totalusersalesum from \r\n          (\r\n\t\t\tselect  orderTFiltered.\"createdUserId\"  as createdUserId ,\r\n\t\t   \tround(sum( orderItemsT.\"count\" * orderItemsT.\"amount\")::numeric, 3) as multiPlied\r\n\t\t\t   from public.\"orderItem\" orderItemsT \r\n\t\t\t\tjoin \r\n\t\t\t\t  (select orderT.\"createdUserId\", orderT.id as orderID from public.\"order\" orderT \r\n\t\t\t\t\twhere \"createdAt\" >=  ${startTimeISO}::timestamp  AND \"createdAt\" <= ${endTimeISO}::timestamp AND \"orderStatus\" != 'cancelled' )\r\n\t\t\t\t\t  orderTFiltered\r\n\t\t\t\ton orderItemsT.\"orderId\"=orderTFiltered.orderID\r\n\t\t\t\tgroup by orderTFiltered.\"createdUserId\" \r\n         ) \r\n        joinedTotal\r\n  join public.\"user\" userT\r\n  on joinedTotal.createdUserId=userT.id\r\n  order by totalusersalesum desc\r\n    `;\r\n\r\n    // const staffStat: StaffStat[] = staffStatArr.map((item) => {\r\n    //   return {\r\n    //     name: item.name,\r\n    //     id: item.id,\r\n    //     orderCount: JSON.parse(this.toJson(item.totCount)),\r\n    //   };\r\n    // });\r\n\r\n    return staffStatArr;\r\n  }\r\n\r\n  async getHomeDeliveryStatCountViceForThePeriod(\r\n    startDateTime: Date,\r\n    endDateTime: Date\r\n  ) {\r\n    const startTimeISO = startDateTime.toISOString();\r\n    const endTimeISO = endDateTime.toISOString();\r\n\r\n    const homeDeliverStatArr: any[] = await this.prismaService.$queryRaw`\r\n       select filteredOrderT.deliveryUserID, userT.\"name\", filteredOrderT.orderCount::int as orderCount from\r\n (select orderT.\"deliveryUserId\" as deliveryUserID, count(orderT.id) as orderCount from public.\"order\" orderT \r\n\t\t\t\t\twhere \"createdAt\" >=  ${startTimeISO}::timestamp  AND \"createdAt\" <= ${endTimeISO} ::timestamp AND \"deliveryUserId\" IS NOT NULL  AND \"orderStatus\" != 'cancelled'\r\n\t\t\t\t\tGroup by orderT.\"deliveryUserId\") filteredOrderT\r\n\t\t\t\t\tjoin public.\"user\" userT\r\n\t\t\t\t\t on filteredOrderT.deliveryUserID=userT.id\r\n  order by orderCount desc\r\n    `;\r\n\r\n    console.log(homeDeliverStatArr);\r\n\r\n    // const staffStat: StaffStat[] = homeDeliverStatArr.map((item) => {\r\n    //   return {\r\n    //     name: item.name,\r\n    //     id: item.id,\r\n    //     orderCount: JSON.parse(this.toJson(item.totCount)),\r\n    //   };\r\n    // });\r\n\r\n    return homeDeliverStatArr;\r\n  }\r\n\r\n  async getHomeDeliveryStatAmountViceForThePeriod(\r\n    startDateTime: Date,\r\n    endDateTime: Date\r\n  ) {\r\n    const startTimeISO = startDateTime.toISOString();\r\n    const endTimeISO = endDateTime.toISOString();\r\n\r\n    const homeDeliverStatArr: any[] = await this.prismaService.$queryRaw`\r\n       select joinedTotal.deliveryUserId as userId, userT.\"name\" as \"name\", joinedTotal.\"multiplied\"::float as totalusersalesum from \r\n          (\r\n\t\t\tselect  orderTFiltered.\"deliveryUserId\" as deliveryUserId ,\r\n\t\t   \tround(sum( orderItemsT.\"count\" * orderItemsT.\"amount\")::numeric, 3) as multiPlied\r\n\t\t\t   from public.\"orderItem\" orderItemsT \r\n\t\t\t\tjoin \r\n\t\t\t\t  (select orderT.\"createdUserId\",orderT.\"deliveryUserId\", orderT.id as orderID from public.\"order\" orderT \r\n\t\t\t\t\twhere \"createdAt\" >=  ${startTimeISO}::timestamp  AND \"createdAt\" <= ${endTimeISO}::timestamp AND \"deliveryUserId\" IS NOT NULL AND \"orderStatus\" != 'cancelled')\r\n\t\t\t\t\t  orderTFiltered\r\n\t\t\t\ton orderItemsT.\"orderId\"=orderTFiltered.orderID\r\n\t\t\t\tgroup by orderTFiltered.\"deliveryUserId\" \r\n         ) \r\n        joinedTotal\r\n  join public.\"user\" userT\r\n  on joinedTotal.deliveryUserId=userT.id\r\n  order by totalusersalesum desc\r\n    `;\r\n\r\n    console.log(homeDeliverStatArr);\r\n\r\n    // const staffStat: StaffStat[] = homeDeliverStatArr.map((item) => {\r\n    //   return {\r\n    //     name: item.name,\r\n    //     id: item.id,\r\n    //     orderCount: JSON.parse(this.toJson(item.totCount)),\r\n    //   };\r\n    // });\r\n\r\n    return homeDeliverStatArr;\r\n  }\r\n\r\n  async getDashBoardData() {\r\n    // get the start date.\r\n    const sessionStartTime = await this.getActiveSessionStartTime();\r\n    // const sessionStartTime = '2023-09-07T10:37:31.880Z';\r\n\r\n    // [NOTE] prisma query works when iso format is supplied. console loging of sessiontartTime shows time in iso format but infact the content itself is not isoformated, only the console.log\r\n    // for that we need to explicitly make it to ISOstring.\r\n    const timeIso = sessionStartTime.toISOString();\r\n    console.log('session start time', sessionStartTime);\r\n\r\n    const saleStatTypeBased = await this.prismaService.$queryRaw`\r\n    select orderTFiltered.\"orderType\" as description,  round(sum( orderItemsT.\"count\" * orderItemsT.\"amount\")::numeric, 3) as amount from public.\"orderItem\" orderItemsT \r\n    join \r\n      (select orderT.\"orderType\", orderT.\"id\" from public.\"order\" orderT \r\n        where \"createdAt\" >= ${timeIso}::timestamp AND \"orderStatus\" != 'cancelled' )\r\n          orderTFiltered\r\n    on orderItemsT.\"orderId\"=orderTFiltered.id \r\n    group by orderTFiltered.\"orderType\"`;\r\n    console.log('saleStatTypeBased', saleStatTypeBased);\r\n\r\n    const saleStatTypeCount = await this.prismaService.$queryRaw`\r\n    select count(id)::int totalCount , \"orderType\" as description\r\n    from public.\"order\" orders \r\n    where  \"createdAt\" >=  ${timeIso}::timestamp AND \"orderStatus\" != 'cancelled'\r\n    group by orders.\"orderType\"\r\n    `;\r\n\r\n    console.log('saleStatTypeCount', saleStatTypeCount);\r\n    const saleStatPayCount = await this.prismaService.$queryRaw`\r\n    select count(id)::int totalCount , \"paymentStatus\" as description\r\n    from public.\"order\" orders \r\n    where  \"createdAt\" >=  ${timeIso}::timestamp  AND \"orderStatus\" != 'cancelled'\r\n    group by orders.\"paymentStatus\"`;\r\n\r\n    const saleStatOrderStatusCount = await this.prismaService.$queryRaw`\r\n    select count(id)::int totalCount , \"orderStatus\" as description\r\n    from public.\"order\" orders \r\n    where  \"createdAt\" >=  ${timeIso}::timestamp \r\n    group by orders.\"orderStatus\"\r\n`;\r\n\r\n    const homedeliveryAmoutUservice = await this.prismaService.$queryRaw`\r\nselect  userT.\"name\" as description, joinedTotal.\"multiplied\"::numeric as amount from \r\n          (\r\n\t\t\tselect  orderTFiltered.\"deliveryUserId\" as deliveryUserId ,\r\n\t\t   \tround(sum( orderItemsT.\"count\" * orderItemsT.\"amount\")::numeric, 3) as multiPlied\r\n\t\t\t   from public.\"orderItem\" orderItemsT \r\n\t\t\t\tjoin \r\n\t\t\t\t  (select orderT.\"createdUserId\",orderT.\"deliveryUserId\", orderT.id as orderID from public.\"order\" orderT \r\n\t\t\t\t\twhere \"createdAt\" >=  ${timeIso}::timestamp AND \"deliveryUserId\" IS NOT NULL AND \"orderStatus\" != 'cancelled')\r\n\t\t\t\t\t  orderTFiltered\r\n\t\t\t\ton orderItemsT.\"orderId\"=orderTFiltered.orderID\r\n\t\t\t\tgroup by orderTFiltered.\"deliveryUserId\" \r\n         ) \r\n        joinedTotal\r\n  join public.\"user\" userT\r\n  on joinedTotal.deliveryUserId=userT.id\r\n  order by amount desc`;\r\n\r\n    return {\r\n      saleStatTypeBased,\r\n      saleStatPayCount,\r\n      saleStatTypeCount,\r\n      saleStatOrderStatusCount,\r\n      homedeliveryAmoutUservice,\r\n    };\r\n  }\r\n\r\n  private async getActiveSessionStartTime() {\r\n    const activeSession = await this.prismaService.posSession.findFirst({\r\n      where: {\r\n        status: SessionStatus.ACTIVE,\r\n      },\r\n    });\r\n    if (!activeSession) throw new NotFoundException('No active session');\r\n    console.log('active session start time is', activeSession.startTime);\r\n    return activeSession.startTime;\r\n  }\r\n  toJson(data: any) {\r\n    return JSON.stringify(data, (_, v) =>\r\n      typeof v === 'bigint' ? `${v}n` : v\r\n    ).replace(/\"(-?\\d+)n\"/g, (_, a) => a);\r\n  }\r\n\r\n  private async aggregate(startDate: Date, endDate: Date) {\r\n    this.prismaService.orderItem.findMany({\r\n      distinct: ['orderId'],\r\n      where: {},\r\n    });\r\n\r\n    this.prismaService.orderItem.aggregate({\r\n      _sum: {\r\n        amount: true,\r\n      },\r\n    });\r\n\r\n    // this.prismaService.orderItem.groupBy({\r\n    //     by: ['orderId'],\r\n    //     _sum: { amount: true},\r\n    //     where:\r\n    //         {AND: [\r\n    //             {  : {gte: startDate}},\r\n    //             {createdAt: {lte: endDate}}\r\n    //         ]}\r\n\r\n    // })\r\n  }\r\n}\r\n\r\n// Products and count sold for the duration\r\n// const productStatArrs: any[] = await this.prismaService.$queryRaw`select\r\n// subtab.totalCount count, products.name\r\n// from (select sum(\"count\") totalCount, \"productId\" from public.\"orderItem\" orderItems\r\n// where orderItems.\"orderId\" IN (select \"id\" from public.\"order\" where \"createdAt\" >=  ${startDate} AND \"createdAt\" <= ${endDate})\r\n// group by \"productId\") subtab inner join\r\n// (select * from public.\"product\") products\r\n// ON subtab.\"productId\" = products.id order by count desc;\r\n// `;\r\n\r\n// const orderStatArr: any = await this.prismaService\r\n// .$queryRaw`select sum(tempu.totalAmount) as sum, count(tempu.\"orderId\") as count from (select sum(items.count * items.amount) as totalAmount,\r\n// items.\"orderId\" from public.\"orderItem\" items  group by items.\"orderId\" ) tempu\r\n// inner join\r\n// (select id from public.\"order\"\r\n// where \"createdAt\" >=  ${startDate}\r\n// AND \"createdAt\" <= ${endDate}) orders\r\n// on orders.id=tempu.\"orderId\"\r\n// `;\r\n","export * from './lib/api-feature-kitchen.module';\r\n","import { Module } from '@nestjs/common';\r\nimport { KitchenService } from './kitchen.service';\r\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\r\nimport { KitchenController } from './kitchen.controller';\r\n\r\n@Module({\r\n  imports: [ApiDataAccessDbModule],\r\n  controllers: [KitchenController],\r\n  providers: [KitchenService],\r\n  exports: [],\r\n})\r\nexport class ApiFeatureKitchenModule {}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateKitchenDto } from './dto/create-kitchen.dto';\r\nimport { getPrinters } from 'pdf-to-printer';\r\n\r\n@Injectable()\r\nexport class KitchenService {\r\n  constructor(private prismaService: PrismaService) {}\r\n  async createKitchen(kitchen: CreateKitchenDto) {\r\n    return await this.prismaService.kitchen.create({\r\n      data: {\r\n        name: kitchen.name,\r\n        printer: kitchen.printer,\r\n      },\r\n    });\r\n  }\r\n\r\n  async udpateKitchen(id: number, data: CreateKitchenDto) {\r\n    delete data.id;\r\n    try {\r\n      return this.prismaService.kitchen.update({\r\n        where: { id },\r\n        data: data,\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n  async getKitchens() {\r\n    return await this.prismaService.kitchen.findMany();\r\n  }\r\n\r\n  async getAvailablePrinters() {\r\n    const printers = await getPrinters();\r\n    return printers;\r\n  }\r\n}\r\n","import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { KitchenService } from './kitchen.service';\r\nimport { CreateKitchenDto } from './dto/create-kitchen.dto';\r\n\r\n@Controller('kitchen')\r\nexport class KitchenController {\r\n  constructor(private kitchenService: KitchenService) {}\r\n\r\n  @Get()\r\n  getKitchens() {\r\n    return this.kitchenService.getKitchens();\r\n  }\r\n\r\n  @Post()\r\n  createKitchen(@Body() params: CreateKitchenDto) {\r\n    return this.kitchenService.createKitchen(params);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateKitchen(@Body() body: CreateKitchenDto, @Param('id') id: any) {\r\n    const kitchenId = +id;\r\n    console.log('kitchen id', kitchenId);\r\n    return this.kitchenService.udpateKitchen(kitchenId, body);\r\n  }\r\n}\r\n","export class CreateKitchenDto {\r\n  name!: string;\r\n  printer!: string;\r\n  shouldPrintKot!: boolean;\r\n  id?: number;\r\n}\r\n","export * from './lib/api-feature-tax.module';\n","import { Module } from '@nestjs/common';\nimport { TaxController } from './tax.controller';\nimport { TaxService } from './tax.service';\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\n\n@Module({\n  imports: [ApiDataAccessDbModule],\n  controllers: [TaxController],\n  providers: [TaxService],\n  exports: [],\n})\nexport class ApiFeatureTaxModule {}\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  Injectable,\r\n  Param,\r\n  Post,\r\n  Put,\r\n} from '@nestjs/common';\r\nimport { TaxService } from './tax.service';\r\nimport { CreateTaxDto } from './dto/create-tax.dto';\r\n\r\n@Controller('tax')\r\nexport class TaxController {\r\n  constructor(private taxService: TaxService) {}\r\n\r\n  @Get()\r\n  getTaxes() {\r\n    return this.taxService.getTaxes();\r\n  }\r\n\r\n  @Post()\r\n  createTax(@Body() params: CreateTaxDto) {\r\n    return this.taxService.createTax(params);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateTax(@Body() body: CreateTaxDto, @Param('id') id: any) {\r\n    const tableId = +id;\r\n    console.log('table id', tableId);\r\n    return this.taxService.updateTax(tableId, body);\r\n  }\r\n}\r\n","import { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateTaxDto } from './dto/create-tax.dto';\r\nimport { PrismaService } from '@hotel/api/data-access-db';\r\n\r\n@Injectable()\r\nexport class TaxService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getTaxes() {\r\n    try {\r\n      return this.prismaService.tax.findMany();\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n  async createTax(tax: CreateTaxDto) {\r\n    try {\r\n      return await this.prismaService.tax.create({\r\n        data: {\r\n          name: tax.name,\r\n          printName: tax.printName,\r\n          isPercentage: tax.isPercentage,\r\n          value: +tax.value,\r\n          companyId: 1,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n\r\n  async updateTax(id: number, tax: CreateTaxDto) {\r\n    try {\r\n      return await this.prismaService.tax.update({\r\n        where: { id },\r\n        data: {\r\n          name: tax.name,\r\n          printName: tax.printName,\r\n          isPercentage: tax.isPercentage,\r\n          value: +tax.value,\r\n          isActive: tax.isActive,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n}\r\n","export class CreateTaxDto {\r\n  name!: string;\r\n  value!: number;\r\n  printName!: string;\r\n  isPercentage!: boolean;\r\n  isActive!: boolean;\r\n}\r\n","export * from './lib/api-feature-user.module';\n","import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\n\n@Module({\n  imports: [ApiDataAccessDbModule],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [],\n})\nexport class ApiFeatureUserModule {}\n","import { Body, Controller, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { UserService } from './user.service';\r\nimport { CreateUserDto } from './dto/user-create.dto';\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n  constructor(private userService: UserService) {}\r\n\r\n  @Get()\r\n  getUsers() {\r\n    return this.userService.getUsers();\r\n  }\r\n\r\n  @Post()\r\n  createUser(@Body() params: CreateUserDto) {\r\n    return this.userService.createUser(params);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateUser(@Body() body: CreateUserDto, @Param('id') id: any) {\r\n    const userId = +id;\r\n    console.log('User id', userId);\r\n    return this.userService.updateUser(userId, body);\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateUserDto } from './dto/user-create.dto';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private prismaService: PrismaService) {}\r\n  async getUsers() {\r\n    try {\r\n      return await this.prismaService.user.findMany();\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n\r\n  async getDeliveryUsers() {\r\n    try {\r\n      return await this.prismaService.user.findMany({\r\n        where: {\r\n          isHomeDeliveryUser: true,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n\r\n  //   [note] createuseris also part of auth module\r\n  async createUser(user: CreateUserDto) {\r\n    try {\r\n      return await this.prismaService.user.create({\r\n        data: {\r\n          name: user.name,\r\n          password: +user.password,\r\n          username: user.username,\r\n          isAdmin: false,\r\n          isCashier: user.isCashier,\r\n          isKitchenUser: user.isKitchenUser,\r\n          isWaiter: user.isWaiter,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n  async updateUser(id: number, user: CreateUserDto) {\r\n    try {\r\n      return await this.prismaService.user.update({\r\n        where: { id },\r\n        data: {\r\n          name: user.name,\r\n          password: +user.password,\r\n          username: user.username,\r\n          isAdmin: false,\r\n          isCashier: user.isCashier,\r\n          isKitchenUser: user.isKitchenUser,\r\n          isWaiter: user.isWaiter,\r\n          isHomeDeliveryUser: user.isHomeDeliveryUser,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      throw new BadRequestException({ error: error });\r\n    }\r\n  }\r\n}\r\n","export class CreateUserDto {\r\n  username!: string;\r\n  password!: number;\r\n  name!: string;\r\n  phone!: string;\r\n  isCashier!: boolean;\r\n  isWaiter!: boolean;\r\n  isKitchenUser!: boolean;\r\n  isAdmin!: boolean;\r\n  isHomeDeliveryUser!: boolean;\r\n}\r\n","export * from './lib/api-feature-variant.module';\n","import { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\nimport { Module } from '@nestjs/common';\nimport { VariantService } from './variant.service';\nimport { VariantController } from './variant.conroller';\n\n@Module({\n  imports: [ApiDataAccessDbModule],\n  controllers: [VariantController],\n  providers: [VariantService],\n  exports: [],\n})\nexport class ApiFeatureVariantModule {}\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { BadRequestException, Injectable } from '@nestjs/common';\r\nimport { CreateVariantDto } from './dto/create-variant.dto';\r\n\r\n@Injectable()\r\nexport class VariantService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getVariants(productId: number) {\r\n    return await this.prismaService.variant.findMany({\r\n      where: {\r\n        productId: productId,\r\n      },\r\n    });\r\n  }\r\n\r\n  async createVariant(productId: number, createVariantDto: CreateVariantDto) {\r\n    try {\r\n      const variant = await this.prismaService.variant.create({\r\n        data: {\r\n          name: createVariantDto.name,\r\n          price: +createVariantDto.price,\r\n          productId: productId,\r\n        },\r\n      });\r\n\r\n      return variant;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException({ error: 'error happened' });\r\n    }\r\n  }\r\n\r\n  async updateVariant(variantId: number, updateVariantDto: CreateVariantDto) {\r\n    try {\r\n      const variant = await this.prismaService.variant.update({\r\n        where: { id: variantId },\r\n        data: {\r\n          name: updateVariantDto.name,\r\n          price: +updateVariantDto.price,\r\n        },\r\n      });\r\n\r\n      return variant;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException({ error: 'error happened' });\r\n    }\r\n  }\r\n\r\n  async deleteVariant(variantId: number) {\r\n    try {\r\n      const variant = await this.prismaService.variant.delete({\r\n        where: { id: variantId },\r\n      });\r\n\r\n      return variant;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new BadRequestException({ error: 'error happened' });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  Param,\r\n  Post,\r\n  Put,\r\n} from '@nestjs/common';\r\nimport { VariantService } from './variant.service';\r\nimport { CreateVariantDto } from './dto/create-variant.dto';\r\n\r\n@Controller('variant')\r\nexport class VariantController {\r\n  constructor(private variantService: VariantService) {}\r\n\r\n  @Get(':id')\r\n  getVariants(@Param('id') id: number) {\r\n    const productId = +id;\r\n    console.log('product Id given for finding variants', productId);\r\n    return this.variantService.getVariants(productId);\r\n  }\r\n\r\n  @Post(':id')\r\n  creatVariant(@Param('id') id: string, @Body() dto: CreateVariantDto) {\r\n    const productId = +id;\r\n    return this.variantService.createVariant(productId, dto);\r\n  }\r\n\r\n  @Put(':id')\r\n  updateVariant(@Param('id') id: string, @Body() dto: CreateVariantDto) {\r\n    const variantId = +id;\r\n    return this.variantService.updateVariant(variantId, dto);\r\n  }\r\n\r\n  @Delete(':id')\r\n  deleteVariant(@Param('id') id: string) {\r\n    const variantId = +id;\r\n    return this.variantService.deleteVariant(variantId);\r\n  }\r\n}\r\n","export class CreateVariantDto {\r\n  name!: string;\r\n  price!: number;\r\n}\r\n","export * from './lib/api-feature-home-delivery.module';\n","import { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\nimport { Module } from '@nestjs/common';\nimport { HomeDeliveryController } from './home-delivery.controller';\nimport { HomeDeliveryService } from './home-delivery.service';\nimport { ApiFeatureAuthModule } from '@hotel/api/feature-auth';\n\n@Module({\n  imports: [ApiDataAccessDbModule, ApiFeatureAuthModule],\n  controllers: [HomeDeliveryController],\n  providers: [HomeDeliveryService],\n  exports: [],\n})\nexport class ApiFeatureHomeDeliveryModule {}\n","import { Controller, Get, Param, Req, UseGuards } from '@nestjs/common';\r\nimport { HomeDeliveryService } from './home-delivery.service';\r\nimport { JwtAuthGuard } from '@hotel/api/feature-auth';\r\n\r\n@Controller('delivery')\r\nexport class HomeDeliveryController {\r\n  constructor(private homedeliveryService: HomeDeliveryService) {}\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('myorders')\r\n  getCompletedHomeDeliveryOrders(@Req() req: any) {\r\n    console.log('getting closed home deliveries');\r\n    const user = req.user;\r\n    return this.homedeliveryService.getClosedHomeDeliveryOrdersOfTheCurrentSession(\r\n      user\r\n    );\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get()\r\n  getAssignedDeliveries(@Req() req: any) {\r\n    const user = req.user;\r\n    return this.homedeliveryService.getNonClosedHomeDeliveryOrdersOfTheCurrentSession(\r\n      user\r\n    );\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('/:id')\r\n  completeHomeDelivery(@Req() req: any, @Param() params: any) {\r\n    const user = req.user;\r\n    const orderId = +params.id;\r\n    return this.homedeliveryService.deliverHomeDeliveryOrder(orderId);\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport {\r\n  OrderStatus,\r\n  OrderType,\r\n  SessionStatus,\r\n  User,\r\n} from '@hotel/common/types';\r\nimport {\r\n  BadRequestException,\r\n  Injectable,\r\n  NotFoundException,\r\n} from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class HomeDeliveryService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async deliverHomeDeliveryOrder(orderId: number) {\r\n    console.log('delivering home order.', orderId);\r\n    try {\r\n      await this.prismaService.order.update({\r\n        where: { id: orderId },\r\n        data: {\r\n          orderStatus: OrderStatus.DELIVERED,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async getNonClosedHomeDeliveryOrdersOfTheCurrentSession(user: User) {\r\n    // if cashier get all orders.\r\n    // if deliver user get only assinged.\r\n    // const isUserHasOnlyHomeDeliveryAccess =\r\n    //   !user.isCashier && user.isHomeDeliveryUser;\r\n    try {\r\n      return await this.prismaService.order.findMany({\r\n        where: {\r\n          createdAt: { gte: await this.getActiveSessionStartTime() },\r\n          orderType: OrderType.HOMEDELIVERY,\r\n          orderStatus: {\r\n            notIn: [OrderStatus.DELIVERED, OrderStatus.CANCELLED],\r\n          },\r\n          deliveryUserId: { not: null },\r\n          ...(user.isHomeDeliveryUser && { deliveryUserId: user.id }),\r\n        },\r\n        include: { customer: true, user: true },\r\n      });\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async getClosedHomeDeliveryOrdersOfTheCurrentSession(user: User) {\r\n    // if cashier get all orders.\r\n    // if deliver user get only assinged.\r\n    // const isUserHasOnlyHomeDeliveryAccess =\r\n    //   !user.isCashier && user.isHomeDeliveryUser;\r\n    try {\r\n      return await this.prismaService.order.findMany({\r\n        where: {\r\n          createdAt: { gte: await this.getActiveSessionStartTime() },\r\n          orderType: OrderType.HOMEDELIVERY,\r\n          orderStatus: OrderStatus.DELIVERED,\r\n          deliveryUserId: { not: null },\r\n          ...(user.isHomeDeliveryUser && { deliveryUserId: user.id }),\r\n        },\r\n        include: { customer: true, user: true },\r\n      });\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async getHomeDeliveryOrdersOfTheCurrentSession(user: User) {\r\n    // if cashier get all orders.\r\n    // if deliver user get only assinged.\r\n    // const isUserHasOnlyHomeDeliveryAccess =\r\n    //   !user.isCashier && user.isHomeDeliveryUser;\r\n    try {\r\n      return await this.prismaService.order.findMany({\r\n        where: {\r\n          createdAt: { gte: await this.getActiveSessionStartTime() },\r\n          orderType: OrderType.HOMEDELIVERY,\r\n          orderStatus: { not: OrderStatus.CANCELLED },\r\n          deliveryUserId: { not: null },\r\n          ...(user.isHomeDeliveryUser && { deliveryUserId: user.id }),\r\n        },\r\n        include: { customer: true, user: true },\r\n      });\r\n    } catch (error) {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async getTotalOrderCountAndTotalAmoutByDeliveryUser(user: User) {\r\n    console.log('total count + sale');\r\n  }\r\n\r\n  private async getActiveSessionStartTime() {\r\n    const activeSession = await this.prismaService.posSession.findFirst({\r\n      where: {\r\n        status: SessionStatus.ACTIVE,\r\n      },\r\n    });\r\n    if (!activeSession) throw new NotFoundException('No active session');\r\n    console.log('active session start time is', activeSession.startTime);\r\n    return activeSession.startTime;\r\n  }\r\n}\r\n","export * from './lib/api-feature-order-history.module';\n","import { Module } from '@nestjs/common';\nimport { ApiFeatureAuthModule } from '@hotel/api/feature-auth';\nimport { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\nimport { OrderHistoryController } from './order-history.controller';\nimport { OrderHistoryService } from './order-history.service';\n\n@Module({\n  imports: [ApiDataAccessDbModule, ApiFeatureAuthModule],\n  controllers: [OrderHistoryController],\n  providers: [OrderHistoryService],\n  exports: [],\n})\nexport class ApiFeatureOrderHistoryModule {}\n","import { JwtAuthGuard } from '@hotel/api/feature-auth';\r\nimport { Controller, Get, Param, Query, Req, UseGuards } from '@nestjs/common';\r\nimport { OrderHistoryService } from './order-history.service';\r\n\r\n@Controller('ohistory')\r\nexport class OrderHistoryController {\r\n  constructor(private orderHistoryService: OrderHistoryService) {}\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('ordernumber/:id')\r\n  getOrderHistoryOfOrderAsArray(@Req() req: any, @Param() param: any) {\r\n    const orderId = +param.id;\r\n    console.log('searching by order number');\r\n    return this.orderHistoryService.getOrderHistoryOfOrderNumberAsArr(orderId);\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get()\r\n  getOrderHistoryOfCurrentSession(\r\n    @Req() req: any,\r\n    @Query('skip') skip: any,\r\n    @Query('take') take: any\r\n  ) {\r\n    const user = req.user;\r\n    console.log('inside get of history module');\r\n    // return 'hello';\r\n    return this.orderHistoryService.getOrderHistoryOfTheCurrentSession(user, {\r\n      skip: +skip,\r\n      take: +take,\r\n    });\r\n  }\r\n\r\n  @UseGuards(JwtAuthGuard)\r\n  @Get('user')\r\n  getOrderHistoryOfCurrentSessionGivenUser(\r\n    @Req() req: any,\r\n    @Query('skip') skip: any,\r\n    @Query('take') take: any,\r\n    @Query('userId') userId: any\r\n  ) {\r\n    const user = req.user;\r\n    console.log('skip take userId', `${skip} - ${take} = ${userId}`);\r\n    return this.orderHistoryService.getOrderHistoryOfGivenUserInTheCurrentSession(\r\n      +userId,\r\n      {\r\n        skip: +skip,\r\n        take: +take,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { PaymentStatus, SessionStatus, User } from '@hotel/common/types';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class OrderHistoryService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  async getOrderHistoryOfTheCurrentSession(\r\n    user: User,\r\n    params: {\r\n      skip?: number;\r\n      take?: number;\r\n    }\r\n  ) {\r\n    const activeSessionDate = await this.getActiveSessionStartTime();\r\n\r\n    return await this.getOrderHisotryOfGivenPeriod(\r\n      activeSessionDate,\r\n      new Date(),\r\n      user,\r\n      params\r\n    );\r\n  }\r\n\r\n  async getOrderHisotryOfGivenPeriod(\r\n    startDateTime: Date,\r\n    endDateTime: Date,\r\n    user: User,\r\n    params: {\r\n      skip?: number;\r\n      take?: number;\r\n    }\r\n  ) {\r\n    // eslint-disable-next-line prefer-const\r\n    let { skip, take } = params;\r\n\r\n    if (!take) take = 10;\r\n    console.log('values of skipt and take', `skip ${skip} - take ${take}`);\r\n    try {\r\n      if (!skip) {\r\n        console.log(`in the skip 0 area skip values is ${skip}`);\r\n        return this.prismaService.order.findMany({\r\n          take,\r\n          where: {\r\n            // paymentStatus: { in: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n            ...(!user.isCashier && { createdUserId: user.id }),\r\n            // createdAt: { gte: startDateTime },\r\n          },\r\n          include: { customer: true, user: true },\r\n          orderBy: { createdAt: 'desc' },\r\n        });\r\n      } else {\r\n        return this.prismaService.order.findMany({\r\n          skip,\r\n          take,\r\n          where: {\r\n            paymentStatus: { in: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n            ...(!user.isCashier && { createdUserId: user.id }),\r\n          },\r\n          orderBy: { createdAt: 'desc' },\r\n          include: { customer: true, user: true },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw new Error('Error on get order history');\r\n    }\r\n  }\r\n\r\n  async getOrderHistoryOfGivenUserInTheCurrentSession(\r\n    userId: number,\r\n    params: {\r\n      skip?: number;\r\n      take?: number;\r\n    }\r\n  ) {\r\n    const activeSessionDate = await this.getActiveSessionStartTime();\r\n    return this.getOrderHistoryOfGivenPeriodOfAUser(\r\n      activeSessionDate,\r\n      new Date(),\r\n      userId,\r\n      params\r\n    );\r\n  }\r\n  private async getOrderHistoryOfGivenPeriodOfAUser(\r\n    startDateTime: Date,\r\n    endDateTime: Date,\r\n    userId: number,\r\n    params: {\r\n      skip?: number;\r\n      take?: number;\r\n    }\r\n  ) {\r\n    // eslint-disable-next-line prefer-const\r\n    let { skip, take } = params;\r\n    if (!take) take = 10;\r\n    try {\r\n      if (!skip) {\r\n        console.log(`picking first set when skip is zero userid ${userId}`);\r\n\r\n        const orders = await this.prismaService.order.findMany({\r\n          take,\r\n          where: {\r\n            paymentStatus: { in: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n            createdUserId: +userId,\r\n            // createdAt: { gte: startDateTime },\r\n          },\r\n          include: { customer: true, user: true },\r\n          orderBy: { createdAt: 'desc' },\r\n        });\r\n        // console.log('orders are', orders);\r\n        return orders;\r\n      } else {\r\n        return await this.prismaService.order.findMany({\r\n          skip,\r\n          take,\r\n          where: {\r\n            // paymentStatus: { in: [PaymentStatus.CREDIT, PaymentStatus.PAID] },\r\n            createdUserId: userId,\r\n            // createdAt: { gte: startDateTime },\r\n          },\r\n          include: { customer: true, user: true },\r\n          orderBy: { createdAt: 'desc' },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw new Error('Error on get order history');\r\n    }\r\n  }\r\n\r\n  async getOrderHistoryOfOrderNumberAsArr(orderNumber: number) {\r\n    try {\r\n      return this.prismaService.order.findMany({\r\n        where: { orderNumber },\r\n        include: { customer: true, user: true },\r\n      });\r\n    } catch (error) {\r\n      throw new Error('Error on get order history');\r\n    }\r\n  }\r\n  private async getActiveSessionStartTime() {\r\n    const activeSession = await this.prismaService.posSession.findFirst({\r\n      where: {\r\n        status: SessionStatus.ACTIVE,\r\n      },\r\n    });\r\n    if (!activeSession) throw new NotFoundException('No active session');\r\n    console.log('active session start time is', activeSession.startTime);\r\n    return activeSession.startTime;\r\n  }\r\n}\r\n","export * from './lib/api-feature-kot.module';\n","import { ApiDataAccessDbModule } from '@hotel/api/data-access-db';\nimport { Module } from '@nestjs/common';\nimport { KotController } from './kot.controller';\nimport { KotService } from './kot.services';\n\n@Module({\n  imports: [ApiDataAccessDbModule],\n  controllers: [KotController],\n  providers: [KotService],\n  exports: [],\n})\nexport class ApiFeatureKotModule {}\n","import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\r\nimport { KotService } from './kot.services';\r\n\r\n@Controller('kot')\r\nexport class KotController {\r\n  constructor(private kotService: KotService) {}\r\n\r\n  @Get()\r\n  getOpenKots() {\r\n    console.log('cotoller called?');\r\n    return this.kotService.getOpenKots();\r\n  }\r\n\r\n  @Patch()\r\n  completeKot(@Body() data: any) {\r\n    const kotId = +data.kotId;\r\n    return this.kotService.completeKot(kotId);\r\n  }\r\n\r\n  @Get(':id')\r\n  getOrderKots(@Param() id: any) {\r\n    console.log(id);\r\n    return id;\r\n  }\r\n}\r\n","import { PrismaService } from '@hotel/api/data-access-db';\r\nimport { KotStatus } from '@hotel/common/types';\r\nimport { Injectable } from '@nestjs/common';\r\n@Injectable()\r\nexport class KotService {\r\n  constructor(private prismaService: PrismaService) {}\r\n\r\n  // KOT which is closed should not be visible to the user.\r\n  // async getOpenOrderKots(orderId: number) {\r\n  //  return await this.prismaService.kot.findMany({\r\n  //   where : {\r\n  //     orderi\r\n  //   }\r\n  //  })\r\n  // }\r\n\r\n  getKots() {\r\n    this.prismaService.kot.findMany({\r\n      where: {\r\n        status: KotStatus.INPROGRESS,\r\n      },\r\n    });\r\n  }\r\n\r\n  async completeKot(id: number) {\r\n    try {\r\n      const updatedKot = await this.prismaService.kot.update({\r\n        where: {\r\n          id,\r\n        },\r\n        data: {\r\n          status: KotStatus.READY,\r\n        },\r\n      });\r\n\r\n      return updatedKot.id;\r\n    } catch (error) {\r\n      throw new Error('Could not update the kotstatus');\r\n    }\r\n  }\r\n\r\n  async getOpenKots() {\r\n    const rawQueryResult: any[] = await this.prismaService.$queryRaw`\r\n    select \r\n    \"orderItem\".\"customeKey\",\r\n    \"orderItem\".\"count\",\r\n\t\"orderItem\".\"name\",\r\n\t\"orderItem\".\"orderItemType\",\r\n\t\"orderItem\".\"amount\",\r\n\t\"orderItem\".\"message\",\r\n\tkotOrderUserT.\"orderId\",\r\n\tkotOrderUserT.\"kotid\", \r\n\tkotOrderUserT.\"createdAt\",\r\n\tkotOrderUserT.\"updatedAt\",\r\n\tkotOrderUserT.\"kitchenId\",\r\n\tkotOrderUserT.\"createdUserName\",\r\n\tkotOrderUserT.\"createdUserId\",\r\n\tkotOrderUserT.\"orderNumber\",\r\n\tkotOrderUserT.\"orderType\"\r\nfrom\t\r\n\t(select \tkotUserTable.\"kotid\", \r\n\t\tkotUserTable.\"createdAt\",\r\n\t\tkotUserTable.\"updatedAt\",\r\n\t\tkotUserTable.\"kitchenId\",\r\n\t\tkotUserTable.\"orderId\",\r\n\t\tkotUserTable.\"createdUserName\",\r\n\t\tkotUserTable.\"createdUserId\",\r\n\t\tfilteredOrderTable.\"orderNumber\",\r\n\t\tfilteredOrderTable.\"orderType\"\r\n\t\tfrom \r\n\t\t\t(select kotT.id as kotid, \r\n\t\t\t\t\tkotT.\"createdAt\", \r\n\t\t\t\t\tkotT.\"updatedAt\", \r\n\t\t\t\t\tkotT.\"kitchenId\",\r\n\t\t\t\t\tkotT.\"orderId\", \r\n\t\t\t\t\t\"user\".\"name\" as \"createdUserName\",\r\n\t\t\t\t\t\"user\".id as \"createdUserId\"\r\n\t\t\t\t\t\tfrom (select * from kot where kot.\"status\"='inprogress') kotT\r\n\t\t\t\t \t\t\tjoin \"user\" \r\n\t\t\t \t\t\t\ton kotT.\"updatedUserId\"=\"user\".\"id\") kotUserTable \r\n\t\t\t\t\t\t\t\t\tjoin \r\n\t\t\t\t\t\t\t\t\t\t(select id as orderpid, \r\n\t\t\t\t\t\t\t\t\t\t \t\t\"orderNumber\" ,\r\n\t\t\t\t\t\t\t\t\t\t \t\t\"orderType\"\r\n\t\t\t\t\t\t\t\t\t\t \t\t\tfrom \"order\" where \"orderStatus\"='inprogress' and \"paymentStatus\"='notpaid') filteredOrderTable\r\n\t\t\t\t\t\t\t\t\ton kotUserTable.\"orderId\"=filteredOrderTable.\"orderpid\" ) kotOrderUserT\r\n\t\t\t\t\t\t\t\t\t\tjoin \"orderItem\"\r\n\t\t\t\t\t\t\t\t\t\t\ton kotOrderUserT.\"kotid\"=\"orderItem\".\"kotNumber\"\r\n    `;\r\n\r\n    let kotMap: Record<string, any> = {};\r\n    rawQueryResult.forEach((result) => {\r\n      const kotid: string = result.kotid.toString();\r\n      kotMap[kotid] = {\r\n        ...(kotMap[kotid] || {}),\r\n        ...{\r\n          ...result,\r\n          kotItems: kotMap[kotid]\r\n            ? [\r\n                ...kotMap[kotid].kotItems,\r\n                {\r\n                  name: result.name,\r\n                  orderItemType: result.orderItemType,\r\n                  amount: result.amount,\r\n                  count: result.count,\r\n                  message: result.message,\r\n                  customeKey: result.customeKey,\r\n                },\r\n              ]\r\n            : [\r\n                {\r\n                  name: result.name,\r\n                  orderItemType: result.orderItemType,\r\n                  amount: result.amount,\r\n                  count: result.count,\r\n                  message: result.message,\r\n                  customeKey: result.customeKey,\r\n                },\r\n              ],\r\n        },\r\n      };\r\n    });\r\n\r\n    return Object.values(kotMap);\r\n    // const kots: Kot[] = [\r\n    //   {\r\n    //     createdAt: new Date(),\r\n    //     updatedAt: new Date(),\r\n    //     createdUserId: 1,\r\n    //     createdUserName: 'Jafar',\r\n    //     id: 1,\r\n    //     kitchenId: 2,\r\n    //     orderId: 1,\r\n    //     status: KotStatus.INPROGRESS,\r\n    //   },\r\n    //   {\r\n    //     createdAt: new Date(),\r\n    //     updatedAt: new Date(),\r\n    //     createdUserId: 1,\r\n    //     createdUserName: 'Sadiq',\r\n    //     id: 2,\r\n    //     kitchenId: 2,\r\n    //     orderId: 1,\r\n    //     status: KotStatus.INPROGRESS,\r\n    //   },\r\n    //   {\r\n    //     createdAt: new Date(),\r\n    //     updatedAt: new Date(),\r\n    //     createdUserId: 1,\r\n    //     createdUserName: 'Bro',\r\n    //     id: 3,\r\n    //     kitchenId: 2,\r\n    //     orderId: 1,\r\n    //     status: KotStatus.INPROGRESS,\r\n    //   },\r\n    // ];\r\n\r\n    // return kots;\r\n  }\r\n}\r\n","module.exports = require(\"express\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { NestExpressApplication } from '@nestjs/platform-express';\r\nimport { json } from 'express';\r\nimport { join } from 'path';\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\r\n  app.enableCors();\r\n  const globalPrefix = 'api';\r\n  app.setGlobalPrefix(globalPrefix);\r\n  app.use(json({ limit: '50mb' }));\r\n\r\n  app.useStaticAssets(join(__dirname, '..', 'public'));\r\n  app.setBaseViewsDir(join(__dirname, '..', 'views'));\r\n  app.setViewEngine('hbs');\r\n\r\n  const port = process.env.PORT || 3000;\r\n  await app.listen(port);\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}